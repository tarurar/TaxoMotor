//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("TM.DataModel", "FK_License_ToLicense_Parent", "License", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebClientGIBDD.License), "License1", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebClientGIBDD.License), true)]
[assembly: EdmRelationshipAttribute("TM.DataModel", "FK_License_ToLicense_RootParent", "License", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebClientGIBDD.License), "License1", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebClientGIBDD.License), true)]
[assembly: EdmRelationshipAttribute("TM.DataModel", "FK_SpecialVehiclesRegister_License", "License", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebClientGIBDD.License), "SpecialVehiclesRegister", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebClientGIBDD.SpecialVehiclesRegister), true)]

#endregion

namespace WebClientGIBDD
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class TmDataModelContainer : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект TmDataModelContainer, используя строку соединения из раздела "TmDataModelContainer" файла конфигурации приложения.
        /// </summary>
        public TmDataModelContainer() : base("name=TmDataModelContainer", "TmDataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта TmDataModelContainer.
        /// </summary>
        public TmDataModelContainer(EntityConnection connection) : base(connection, "TmDataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ExcludeVehicles> ExcludeVehicles
        {
            get
            {
                if ((_ExcludeVehicles == null))
                {
                    _ExcludeVehicles = base.CreateObjectSet<ExcludeVehicles>("ExcludeVehicles");
                }
                return _ExcludeVehicles;
            }
        }
        private ObjectSet<ExcludeVehicles> _ExcludeVehicles;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<License> License
        {
            get
            {
                if ((_License == null))
                {
                    _License = base.CreateObjectSet<License>("License");
                }
                return _License;
            }
        }
        private ObjectSet<License> _License;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<SpecialVehiclesRegister> SpecialVehiclesRegister
        {
            get
            {
                if ((_SpecialVehiclesRegister == null))
                {
                    _SpecialVehiclesRegister = base.CreateObjectSet<SpecialVehiclesRegister>("SpecialVehiclesRegister");
                }
                return _SpecialVehiclesRegister;
            }
        }
        private ObjectSet<SpecialVehiclesRegister> _SpecialVehiclesRegister;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<AppLog> AppLog
        {
            get
            {
                if ((_AppLog == null))
                {
                    _AppLog = base.CreateObjectSet<AppLog>("AppLog");
                }
                return _AppLog;
            }
        }
        private ObjectSet<AppLog> _AppLog;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<GibddServiceErrors> GibddServiceErrors
        {
            get
            {
                if ((_GibddServiceErrors == null))
                {
                    _GibddServiceErrors = base.CreateObjectSet<GibddServiceErrors>("GibddServiceErrors");
                }
                return _GibddServiceErrors;
            }
        }
        private ObjectSet<GibddServiceErrors> _GibddServiceErrors;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ExcludeVehicles. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToExcludeVehicles(ExcludeVehicles excludeVehicles)
        {
            base.AddObject("ExcludeVehicles", excludeVehicles);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet License. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToLicense(License license)
        {
            base.AddObject("License", license);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet SpecialVehiclesRegister. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSpecialVehiclesRegister(SpecialVehiclesRegister specialVehiclesRegister)
        {
            base.AddObject("SpecialVehiclesRegister", specialVehiclesRegister);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet AppLog. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAppLog(AppLog appLog)
        {
            base.AddObject("AppLog", appLog);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet GibddServiceErrors. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToGibddServiceErrors(GibddServiceErrors gibddServiceErrors)
        {
            base.AddObject("GibddServiceErrors", gibddServiceErrors);
        }

        #endregion

        #region Импортируемые функции
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        /// <param name="applicationName">Нет доступной документации по метаданным.</param>
        /// <param name="direction">Нет доступной документации по метаданным.</param>
        /// <param name="message">Нет доступной документации по метаданным.</param>
        /// <param name="messageID">Нет доступной документации по метаданным.</param>
        public int AppLogInsert(global::System.String applicationName, global::System.String direction, global::System.String message, Nullable<global::System.Guid> messageID)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter directionParameter;
            if (direction != null)
            {
                directionParameter = new ObjectParameter("Direction", direction);
            }
            else
            {
                directionParameter = new ObjectParameter("Direction", typeof(global::System.String));
            }
    
            ObjectParameter messageParameter;
            if (message != null)
            {
                messageParameter = new ObjectParameter("Message", message);
            }
            else
            {
                messageParameter = new ObjectParameter("Message", typeof(global::System.String));
            }
    
            ObjectParameter messageIDParameter;
            if (messageID.HasValue)
            {
                messageIDParameter = new ObjectParameter("MessageID", messageID);
            }
            else
            {
                messageIDParameter = new ObjectParameter("MessageID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("AppLogInsert", applicationNameParameter, directionParameter, messageParameter, messageIDParameter);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TM.DataModel", Name="AppLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AppLog : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта AppLog.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="eventDateTime">Исходное значение свойства EventDateTime.</param>
        /// <param name="applicationName">Исходное значение свойства ApplicationName.</param>
        /// <param name="direction">Исходное значение свойства Direction.</param>
        /// <param name="message">Исходное значение свойства Message.</param>
        public static AppLog CreateAppLog(global::System.Guid id, global::System.DateTime eventDateTime, global::System.String applicationName, global::System.String direction, global::System.String message)
        {
            AppLog appLog = new AppLog();
            appLog.ID = id;
            appLog.EventDateTime = eventDateTime;
            appLog.ApplicationName = applicationName;
            appLog.Direction = direction;
            appLog.Message = message;
            return appLog;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventDateTime
        {
            get
            {
                return _EventDateTime;
            }
            set
            {
                OnEventDateTimeChanging(value);
                ReportPropertyChanging("EventDateTime");
                _EventDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDateTime");
                OnEventDateTimeChanged();
            }
        }
        private global::System.DateTime _EventDateTime;
        partial void OnEventDateTimeChanging(global::System.DateTime value);
        partial void OnEventDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Direction
        {
            get
            {
                return _Direction;
            }
            set
            {
                OnDirectionChanging(value);
                ReportPropertyChanging("Direction");
                _Direction = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Direction");
                OnDirectionChanged();
            }
        }
        private global::System.String _Direction;
        partial void OnDirectionChanging(global::System.String value);
        partial void OnDirectionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MessageID
        {
            get
            {
                return _MessageID;
            }
            set
            {
                OnMessageIDChanging(value);
                ReportPropertyChanging("MessageID");
                _MessageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageID");
                OnMessageIDChanged();
            }
        }
        private Nullable<global::System.Guid> _MessageID;
        partial void OnMessageIDChanging(Nullable<global::System.Guid> value);
        partial void OnMessageIDChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TM.DataModel", Name="ExcludeVehicles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExcludeVehicles : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ExcludeVehicles.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static ExcludeVehicles CreateExcludeVehicles(global::System.Guid id)
        {
            ExcludeVehicles excludeVehicles = new ExcludeVehicles();
            excludeVehicles.ID = id;
            return excludeVehicles;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String owner
        {
            get
            {
                return _owner;
            }
            set
            {
                OnownerChanging(value);
                ReportPropertyChanging("owner");
                _owner = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("owner");
                OnownerChanged();
            }
        }
        private global::System.String _owner;
        partial void OnownerChanging(global::System.String value);
        partial void OnownerChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String licenseId
        {
            get
            {
                return _licenseId;
            }
            set
            {
                OnlicenseIdChanging(value);
                ReportPropertyChanging("licenseId");
                _licenseId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("licenseId");
                OnlicenseIdChanged();
            }
        }
        private global::System.String _licenseId;
        partial void OnlicenseIdChanging(global::System.String value);
        partial void OnlicenseIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String catalogNumber
        {
            get
            {
                return _catalogNumber;
            }
            set
            {
                OncatalogNumberChanging(value);
                ReportPropertyChanging("catalogNumber");
                _catalogNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("catalogNumber");
                OncatalogNumberChanged();
            }
        }
        private global::System.String _catalogNumber;
        partial void OncatalogNumberChanging(global::System.String value);
        partial void OncatalogNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String licencePlateNumber
        {
            get
            {
                return _licencePlateNumber;
            }
            set
            {
                OnlicencePlateNumberChanging(value);
                ReportPropertyChanging("licencePlateNumber");
                _licencePlateNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("licencePlateNumber");
                OnlicencePlateNumberChanged();
            }
        }
        private global::System.String _licencePlateNumber;
        partial void OnlicencePlateNumberChanging(global::System.String value);
        partial void OnlicencePlateNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> uploadDate
        {
            get
            {
                return _uploadDate;
            }
            set
            {
                OnuploadDateChanging(value);
                ReportPropertyChanging("uploadDate");
                _uploadDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("uploadDate");
                OnuploadDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _uploadDate;
        partial void OnuploadDateChanging(Nullable<global::System.DateTime> value);
        partial void OnuploadDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> cancelDate
        {
            get
            {
                return _cancelDate;
            }
            set
            {
                OncancelDateChanging(value);
                ReportPropertyChanging("cancelDate");
                _cancelDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cancelDate");
                OncancelDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _cancelDate;
        partial void OncancelDateChanging(Nullable<global::System.DateTime> value);
        partial void OncancelDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cancelComment
        {
            get
            {
                return _cancelComment;
            }
            set
            {
                OncancelCommentChanging(value);
                ReportPropertyChanging("cancelComment");
                _cancelComment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cancelComment");
                OncancelCommentChanged();
            }
        }
        private global::System.String _cancelComment;
        partial void OncancelCommentChanging(global::System.String value);
        partial void OncancelCommentChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TM.DataModel", Name="GibddServiceErrors")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GibddServiceErrors : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта GibddServiceErrors.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static GibddServiceErrors CreateGibddServiceErrors(global::System.Int32 id)
        {
            GibddServiceErrors gibddServiceErrors = new GibddServiceErrors();
            gibddServiceErrors.ID = id;
            return gibddServiceErrors;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ErrorDate
        {
            get
            {
                return _ErrorDate;
            }
            set
            {
                OnErrorDateChanging(value);
                ReportPropertyChanging("ErrorDate");
                _ErrorDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ErrorDate");
                OnErrorDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ErrorDate;
        partial void OnErrorDateChanging(Nullable<global::System.DateTime> value);
        partial void OnErrorDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Exception
        {
            get
            {
                return _Exception;
            }
            set
            {
                OnExceptionChanging(value);
                ReportPropertyChanging("Exception");
                _Exception = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Exception");
                OnExceptionChanged();
            }
        }
        private global::System.String _Exception;
        partial void OnExceptionChanging(global::System.String value);
        partial void OnExceptionChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TM.DataModel", Name="License")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class License : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта License.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static License CreateLicense(global::System.Int32 id)
        {
            License license = new License();
            license.Id = id;
            return license;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegNumber
        {
            get
            {
                return _RegNumber;
            }
            set
            {
                OnRegNumberChanging(value);
                ReportPropertyChanging("RegNumber");
                _RegNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegNumber");
                OnRegNumberChanged();
            }
        }
        private global::System.String _RegNumber;
        partial void OnRegNumberChanging(global::System.String value);
        partial void OnRegNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegNumberInt
        {
            get
            {
                return _RegNumberInt;
            }
            set
            {
                OnRegNumberIntChanging(value);
                ReportPropertyChanging("RegNumberInt");
                _RegNumberInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegNumberInt");
                OnRegNumberIntChanged();
            }
        }
        private Nullable<global::System.Int32> _RegNumberInt;
        partial void OnRegNumberIntChanging(Nullable<global::System.Int32> value);
        partial void OnRegNumberIntChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BlankSeries
        {
            get
            {
                return _BlankSeries;
            }
            set
            {
                OnBlankSeriesChanging(value);
                ReportPropertyChanging("BlankSeries");
                _BlankSeries = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BlankSeries");
                OnBlankSeriesChanged();
            }
        }
        private global::System.String _BlankSeries;
        partial void OnBlankSeriesChanging(global::System.String value);
        partial void OnBlankSeriesChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BlankNo
        {
            get
            {
                return _BlankNo;
            }
            set
            {
                OnBlankNoChanging(value);
                ReportPropertyChanging("BlankNo");
                _BlankNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BlankNo");
                OnBlankNoChanged();
            }
        }
        private global::System.String _BlankNo;
        partial void OnBlankNoChanging(global::System.String value);
        partial void OnBlankNoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrgName
        {
            get
            {
                return _OrgName;
            }
            set
            {
                OnOrgNameChanging(value);
                ReportPropertyChanging("OrgName");
                _OrgName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrgName");
                OnOrgNameChanged();
            }
        }
        private global::System.String _OrgName;
        partial void OnOrgNameChanging(global::System.String value);
        partial void OnOrgNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ogrn
        {
            get
            {
                return _Ogrn;
            }
            set
            {
                OnOgrnChanging(value);
                ReportPropertyChanging("Ogrn");
                _Ogrn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ogrn");
                OnOgrnChanged();
            }
        }
        private global::System.String _Ogrn;
        partial void OnOgrnChanging(global::System.String value);
        partial void OnOgrnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Inn
        {
            get
            {
                return _Inn;
            }
            set
            {
                OnInnChanging(value);
                ReportPropertyChanging("Inn");
                _Inn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Inn");
                OnInnChanged();
            }
        }
        private global::System.String _Inn;
        partial void OnInnChanging(global::System.String value);
        partial void OnInnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Parent
        {
            get
            {
                return _Parent;
            }
            set
            {
                OnParentChanging(value);
                ReportPropertyChanging("Parent");
                _Parent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parent");
                OnParentChanged();
            }
        }
        private Nullable<global::System.Int32> _Parent;
        partial void OnParentChanging(Nullable<global::System.Int32> value);
        partial void OnParentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RootParent
        {
            get
            {
                return _RootParent;
            }
            set
            {
                OnRootParentChanging(value);
                ReportPropertyChanging("RootParent");
                _RootParent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RootParent");
                OnRootParentChanged();
            }
        }
        private Nullable<global::System.Int32> _RootParent;
        partial void OnRootParentChanging(Nullable<global::System.Int32> value);
        partial void OnRootParentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Document
        {
            get
            {
                return _Document;
            }
            set
            {
                OnDocumentChanging(value);
                ReportPropertyChanging("Document");
                _Document = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Document");
                OnDocumentChanged();
            }
        }
        private global::System.String _Document;
        partial void OnDocumentChanging(global::System.String value);
        partial void OnDocumentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Signature
        {
            get
            {
                return _Signature;
            }
            set
            {
                OnSignatureChanging(value);
                ReportPropertyChanging("Signature");
                _Signature = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Signature");
                OnSignatureChanged();
            }
        }
        private global::System.String _Signature;
        partial void OnSignatureChanging(global::System.String value);
        partial void OnSignatureChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxiId
        {
            get
            {
                return _TaxiId;
            }
            set
            {
                OnTaxiIdChanging(value);
                ReportPropertyChanging("TaxiId");
                _TaxiId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxiId");
                OnTaxiIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxiId;
        partial void OnTaxiIdChanging(Nullable<global::System.Int32> value);
        partial void OnTaxiIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Lfb
        {
            get
            {
                return _Lfb;
            }
            set
            {
                OnLfbChanging(value);
                ReportPropertyChanging("Lfb");
                _Lfb = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Lfb");
                OnLfbChanged();
            }
        }
        private global::System.String _Lfb;
        partial void OnLfbChanging(global::System.String value);
        partial void OnLfbChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JuridicalAddress
        {
            get
            {
                return _JuridicalAddress;
            }
            set
            {
                OnJuridicalAddressChanging(value);
                ReportPropertyChanging("JuridicalAddress");
                _JuridicalAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JuridicalAddress");
                OnJuridicalAddressChanged();
            }
        }
        private global::System.String _JuridicalAddress;
        partial void OnJuridicalAddressChanging(global::System.String value);
        partial void OnJuridicalAddressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddContactData
        {
            get
            {
                return _AddContactData;
            }
            set
            {
                OnAddContactDataChanging(value);
                ReportPropertyChanging("AddContactData");
                _AddContactData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddContactData");
                OnAddContactDataChanged();
            }
        }
        private global::System.String _AddContactData;
        partial void OnAddContactDataChanging(global::System.String value);
        partial void OnAddContactDataChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountAbbr
        {
            get
            {
                return _AccountAbbr;
            }
            set
            {
                OnAccountAbbrChanging(value);
                ReportPropertyChanging("AccountAbbr");
                _AccountAbbr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountAbbr");
                OnAccountAbbrChanged();
            }
        }
        private global::System.String _AccountAbbr;
        partial void OnAccountAbbrChanging(global::System.String value);
        partial void OnAccountAbbrChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxiBrand
        {
            get
            {
                return _TaxiBrand;
            }
            set
            {
                OnTaxiBrandChanging(value);
                ReportPropertyChanging("TaxiBrand");
                _TaxiBrand = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxiBrand");
                OnTaxiBrandChanged();
            }
        }
        private global::System.String _TaxiBrand;
        partial void OnTaxiBrandChanging(global::System.String value);
        partial void OnTaxiBrandChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxiModel
        {
            get
            {
                return _TaxiModel;
            }
            set
            {
                OnTaxiModelChanging(value);
                ReportPropertyChanging("TaxiModel");
                _TaxiModel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxiModel");
                OnTaxiModelChanged();
            }
        }
        private global::System.String _TaxiModel;
        partial void OnTaxiModelChanging(global::System.String value);
        partial void OnTaxiModelChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxiStateNumber
        {
            get
            {
                return _TaxiStateNumber;
            }
            set
            {
                OnTaxiStateNumberChanging(value);
                ReportPropertyChanging("TaxiStateNumber");
                _TaxiStateNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxiStateNumber");
                OnTaxiStateNumberChanged();
            }
        }
        private global::System.String _TaxiStateNumber;
        partial void OnTaxiStateNumberChanging(global::System.String value);
        partial void OnTaxiStateNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxiYear
        {
            get
            {
                return _TaxiYear;
            }
            set
            {
                OnTaxiYearChanging(value);
                ReportPropertyChanging("TaxiYear");
                _TaxiYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxiYear");
                OnTaxiYearChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxiYear;
        partial void OnTaxiYearChanging(Nullable<global::System.Int32> value);
        partial void OnTaxiYearChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OutputDate
        {
            get
            {
                return _OutputDate;
            }
            set
            {
                OnOutputDateChanging(value);
                ReportPropertyChanging("OutputDate");
                _OutputDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputDate");
                OnOutputDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OutputDate;
        partial void OnOutputDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOutputDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TillDate
        {
            get
            {
                return _TillDate;
            }
            set
            {
                OnTillDateChanging(value);
                ReportPropertyChanging("TillDate");
                _TillDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TillDate");
                OnTillDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TillDate;
        partial void OnTillDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTillDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TillSuspensionDate
        {
            get
            {
                return _TillSuspensionDate;
            }
            set
            {
                OnTillSuspensionDateChanging(value);
                ReportPropertyChanging("TillSuspensionDate");
                _TillSuspensionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TillSuspensionDate");
                OnTillSuspensionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TillSuspensionDate;
        partial void OnTillSuspensionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTillSuspensionDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CancellationReason
        {
            get
            {
                return _CancellationReason;
            }
            set
            {
                OnCancellationReasonChanging(value);
                ReportPropertyChanging("CancellationReason");
                _CancellationReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CancellationReason");
                OnCancellationReasonChanged();
            }
        }
        private global::System.String _CancellationReason;
        partial void OnCancellationReasonChanging(global::System.String value);
        partial void OnCancellationReasonChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SuspensionReason
        {
            get
            {
                return _SuspensionReason;
            }
            set
            {
                OnSuspensionReasonChanging(value);
                ReportPropertyChanging("SuspensionReason");
                _SuspensionReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SuspensionReason");
                OnSuspensionReasonChanged();
            }
        }
        private global::System.String _SuspensionReason;
        partial void OnSuspensionReasonChanging(global::System.String value);
        partial void OnSuspensionReasonChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChangeReason
        {
            get
            {
                return _ChangeReason;
            }
            set
            {
                OnChangeReasonChanging(value);
                ReportPropertyChanging("ChangeReason");
                _ChangeReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChangeReason");
                OnChangeReasonChanged();
            }
        }
        private global::System.String _ChangeReason;
        partial void OnChangeReasonChanging(global::System.String value);
        partial void OnChangeReasonChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvalidReason
        {
            get
            {
                return _InvalidReason;
            }
            set
            {
                OnInvalidReasonChanging(value);
                ReportPropertyChanging("InvalidReason");
                _InvalidReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InvalidReason");
                OnInvalidReasonChanged();
            }
        }
        private global::System.String _InvalidReason;
        partial void OnInvalidReasonChanging(global::System.String value);
        partial void OnInvalidReasonChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecondName
        {
            get
            {
                return _SecondName;
            }
            set
            {
                OnSecondNameChanging(value);
                ReportPropertyChanging("SecondName");
                _SecondName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecondName");
                OnSecondNameChanged();
            }
        }
        private global::System.String _SecondName;
        partial void OnSecondNameChanging(global::System.String value);
        partial void OnSecondNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OgrnDate
        {
            get
            {
                return _OgrnDate;
            }
            set
            {
                OnOgrnDateChanging(value);
                ReportPropertyChanging("OgrnDate");
                _OgrnDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OgrnDate");
                OnOgrnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OgrnDate;
        partial void OnOgrnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOgrnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Locality
        {
            get
            {
                return _Locality;
            }
            set
            {
                OnLocalityChanging(value);
                ReportPropertyChanging("Locality");
                _Locality = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Locality");
                OnLocalityChanged();
            }
        }
        private global::System.String _Locality;
        partial void OnLocalityChanging(global::System.String value);
        partial void OnLocalityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Town
        {
            get
            {
                return _Town;
            }
            set
            {
                OnTownChanging(value);
                ReportPropertyChanging("Town");
                _Town = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Town");
                OnTownChanged();
            }
        }
        private global::System.String _Town;
        partial void OnTownChanging(global::System.String value);
        partial void OnTownChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String House
        {
            get
            {
                return _House;
            }
            set
            {
                OnHouseChanging(value);
                ReportPropertyChanging("House");
                _House = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("House");
                OnHouseChanged();
            }
        }
        private global::System.String _House;
        partial void OnHouseChanging(global::System.String value);
        partial void OnHouseChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Building
        {
            get
            {
                return _Building;
            }
            set
            {
                OnBuildingChanging(value);
                ReportPropertyChanging("Building");
                _Building = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Building");
                OnBuildingChanged();
            }
        }
        private global::System.String _Building;
        partial void OnBuildingChanging(global::System.String value);
        partial void OnBuildingChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Structure
        {
            get
            {
                return _Structure;
            }
            set
            {
                OnStructureChanging(value);
                ReportPropertyChanging("Structure");
                _Structure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Structure");
                OnStructureChanged();
            }
        }
        private global::System.String _Structure;
        partial void OnStructureChanging(global::System.String value);
        partial void OnStructureChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Facility
        {
            get
            {
                return _Facility;
            }
            set
            {
                OnFacilityChanging(value);
                ReportPropertyChanging("Facility");
                _Facility = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Facility");
                OnFacilityChanged();
            }
        }
        private global::System.String _Facility;
        partial void OnFacilityChanging(global::System.String value);
        partial void OnFacilityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ownership
        {
            get
            {
                return _Ownership;
            }
            set
            {
                OnOwnershipChanging(value);
                ReportPropertyChanging("Ownership");
                _Ownership = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ownership");
                OnOwnershipChanged();
            }
        }
        private global::System.String _Ownership;
        partial void OnOwnershipChanging(global::System.String value);
        partial void OnOwnershipChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Flat
        {
            get
            {
                return _Flat;
            }
            set
            {
                OnFlatChanging(value);
                ReportPropertyChanging("Flat");
                _Flat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Flat");
                OnFlatChanged();
            }
        }
        private global::System.String _Flat;
        partial void OnFlatChanging(global::System.String value);
        partial void OnFlatChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMail
        {
            get
            {
                return _EMail;
            }
            set
            {
                OnEMailChanging(value);
                ReportPropertyChanging("EMail");
                _EMail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMail");
                OnEMailChanged();
            }
        }
        private global::System.String _EMail;
        partial void OnEMailChanging(global::System.String value);
        partial void OnEMailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxiColor
        {
            get
            {
                return _TaxiColor;
            }
            set
            {
                OnTaxiColorChanging(value);
                ReportPropertyChanging("TaxiColor");
                _TaxiColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxiColor");
                OnTaxiColorChanged();
            }
        }
        private global::System.String _TaxiColor;
        partial void OnTaxiColorChanging(global::System.String value);
        partial void OnTaxiColorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxiNumberColor
        {
            get
            {
                return _TaxiNumberColor;
            }
            set
            {
                OnTaxiNumberColorChanging(value);
                ReportPropertyChanging("TaxiNumberColor");
                _TaxiNumberColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxiNumberColor");
                OnTaxiNumberColorChanged();
            }
        }
        private global::System.String _TaxiNumberColor;
        partial void OnTaxiNumberColorChanging(global::System.String value);
        partial void OnTaxiNumberColorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxiVin
        {
            get
            {
                return _TaxiVin;
            }
            set
            {
                OnTaxiVinChanging(value);
                ReportPropertyChanging("TaxiVin");
                _TaxiVin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxiVin");
                OnTaxiVinChanged();
            }
        }
        private global::System.String _TaxiVin;
        partial void OnTaxiVinChanging(global::System.String value);
        partial void OnTaxiVinChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Guid_OD
        {
            get
            {
                return _Guid_OD;
            }
            set
            {
                OnGuid_ODChanging(value);
                ReportPropertyChanging("Guid_OD");
                _Guid_OD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Guid_OD");
                OnGuid_ODChanged();
            }
        }
        private global::System.String _Guid_OD;
        partial void OnGuid_ODChanging(global::System.String value);
        partial void OnGuid_ODChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date_OD
        {
            get
            {
                return _Date_OD;
            }
            set
            {
                OnDate_ODChanging(value);
                ReportPropertyChanging("Date_OD");
                _Date_OD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date_OD");
                OnDate_ODChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date_OD;
        partial void OnDate_ODChanging(Nullable<global::System.DateTime> value);
        partial void OnDate_ODChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> FromPortal
        {
            get
            {
                return _FromPortal;
            }
            set
            {
                OnFromPortalChanging(value);
                ReportPropertyChanging("FromPortal");
                _FromPortal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromPortal");
                OnFromPortalChanged();
            }
        }
        private Nullable<global::System.Boolean> _FromPortal;
        partial void OnFromPortalChanging(Nullable<global::System.Boolean> value);
        partial void OnFromPortalChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirmName
        {
            get
            {
                return _FirmName;
            }
            set
            {
                OnFirmNameChanging(value);
                ReportPropertyChanging("FirmName");
                _FirmName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirmName");
                OnFirmNameChanged();
            }
        }
        private global::System.String _FirmName;
        partial void OnFirmNameChanging(global::System.String value);
        partial void OnFirmNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Brand
        {
            get
            {
                return _Brand;
            }
            set
            {
                OnBrandChanging(value);
                ReportPropertyChanging("Brand");
                _Brand = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Brand");
                OnBrandChanged();
            }
        }
        private global::System.String _Brand;
        partial void OnBrandChanging(global::System.String value);
        partial void OnBrandChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OgrnNum
        {
            get
            {
                return _OgrnNum;
            }
            set
            {
                OnOgrnNumChanging(value);
                ReportPropertyChanging("OgrnNum");
                _OgrnNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OgrnNum");
                OnOgrnNumChanged();
            }
        }
        private global::System.String _OgrnNum;
        partial void OnOgrnNumChanging(global::System.String value);
        partial void OnOgrnNumChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OgrnName
        {
            get
            {
                return _OgrnName;
            }
            set
            {
                OnOgrnNameChanging(value);
                ReportPropertyChanging("OgrnName");
                _OgrnName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OgrnName");
                OnOgrnNameChanged();
            }
        }
        private global::System.String _OgrnName;
        partial void OnOgrnNameChanging(global::System.String value);
        partial void OnOgrnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GRAddress
        {
            get
            {
                return _GRAddress;
            }
            set
            {
                OnGRAddressChanging(value);
                ReportPropertyChanging("GRAddress");
                _GRAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GRAddress");
                OnGRAddressChanged();
            }
        }
        private global::System.String _GRAddress;
        partial void OnGRAddressChanging(global::System.String value);
        partial void OnGRAddressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InnDate
        {
            get
            {
                return _InnDate;
            }
            set
            {
                OnInnDateChanging(value);
                ReportPropertyChanging("InnDate");
                _InnDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InnDate");
                OnInnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InnDate;
        partial void OnInnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InnName
        {
            get
            {
                return _InnName;
            }
            set
            {
                OnInnNameChanging(value);
                ReportPropertyChanging("InnName");
                _InnName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InnName");
                OnInnNameChanged();
            }
        }
        private global::System.String _InnName;
        partial void OnInnNameChanging(global::System.String value);
        partial void OnInnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InnNum
        {
            get
            {
                return _InnNum;
            }
            set
            {
                OnInnNumChanging(value);
                ReportPropertyChanging("InnNum");
                _InnNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InnNum");
                OnInnNumChanged();
            }
        }
        private global::System.String _InnNum;
        partial void OnInnNumChanging(global::System.String value);
        partial void OnInnNumChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address_Fact
        {
            get
            {
                return _Address_Fact;
            }
            set
            {
                OnAddress_FactChanging(value);
                ReportPropertyChanging("Address_Fact");
                _Address_Fact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address_Fact");
                OnAddress_FactChanged();
            }
        }
        private global::System.String _Address_Fact;
        partial void OnAddress_FactChanging(global::System.String value);
        partial void OnAddress_FactChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country_Fact
        {
            get
            {
                return _Country_Fact;
            }
            set
            {
                OnCountry_FactChanging(value);
                ReportPropertyChanging("Country_Fact");
                _Country_Fact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country_Fact");
                OnCountry_FactChanged();
            }
        }
        private global::System.String _Country_Fact;
        partial void OnCountry_FactChanging(global::System.String value);
        partial void OnCountry_FactChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode_Fact
        {
            get
            {
                return _PostalCode_Fact;
            }
            set
            {
                OnPostalCode_FactChanging(value);
                ReportPropertyChanging("PostalCode_Fact");
                _PostalCode_Fact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode_Fact");
                OnPostalCode_FactChanged();
            }
        }
        private global::System.String _PostalCode_Fact;
        partial void OnPostalCode_FactChanging(global::System.String value);
        partial void OnPostalCode_FactChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Locality_Fact
        {
            get
            {
                return _Locality_Fact;
            }
            set
            {
                OnLocality_FactChanging(value);
                ReportPropertyChanging("Locality_Fact");
                _Locality_Fact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Locality_Fact");
                OnLocality_FactChanged();
            }
        }
        private global::System.String _Locality_Fact;
        partial void OnLocality_FactChanging(global::System.String value);
        partial void OnLocality_FactChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Region_Fact
        {
            get
            {
                return _Region_Fact;
            }
            set
            {
                OnRegion_FactChanging(value);
                ReportPropertyChanging("Region_Fact");
                _Region_Fact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Region_Fact");
                OnRegion_FactChanged();
            }
        }
        private global::System.String _Region_Fact;
        partial void OnRegion_FactChanging(global::System.String value);
        partial void OnRegion_FactChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City_Fact
        {
            get
            {
                return _City_Fact;
            }
            set
            {
                OnCity_FactChanging(value);
                ReportPropertyChanging("City_Fact");
                _City_Fact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City_Fact");
                OnCity_FactChanged();
            }
        }
        private global::System.String _City_Fact;
        partial void OnCity_FactChanging(global::System.String value);
        partial void OnCity_FactChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Town_Fact
        {
            get
            {
                return _Town_Fact;
            }
            set
            {
                OnTown_FactChanging(value);
                ReportPropertyChanging("Town_Fact");
                _Town_Fact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Town_Fact");
                OnTown_FactChanged();
            }
        }
        private global::System.String _Town_Fact;
        partial void OnTown_FactChanging(global::System.String value);
        partial void OnTown_FactChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street_Fact
        {
            get
            {
                return _Street_Fact;
            }
            set
            {
                OnStreet_FactChanging(value);
                ReportPropertyChanging("Street_Fact");
                _Street_Fact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street_Fact");
                OnStreet_FactChanged();
            }
        }
        private global::System.String _Street_Fact;
        partial void OnStreet_FactChanging(global::System.String value);
        partial void OnStreet_FactChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String House_Fact
        {
            get
            {
                return _House_Fact;
            }
            set
            {
                OnHouse_FactChanging(value);
                ReportPropertyChanging("House_Fact");
                _House_Fact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("House_Fact");
                OnHouse_FactChanged();
            }
        }
        private global::System.String _House_Fact;
        partial void OnHouse_FactChanging(global::System.String value);
        partial void OnHouse_FactChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Building_Fact
        {
            get
            {
                return _Building_Fact;
            }
            set
            {
                OnBuilding_FactChanging(value);
                ReportPropertyChanging("Building_Fact");
                _Building_Fact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Building_Fact");
                OnBuilding_FactChanged();
            }
        }
        private global::System.String _Building_Fact;
        partial void OnBuilding_FactChanging(global::System.String value);
        partial void OnBuilding_FactChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Structure_Fact
        {
            get
            {
                return _Structure_Fact;
            }
            set
            {
                OnStructure_FactChanging(value);
                ReportPropertyChanging("Structure_Fact");
                _Structure_Fact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Structure_Fact");
                OnStructure_FactChanged();
            }
        }
        private global::System.String _Structure_Fact;
        partial void OnStructure_FactChanging(global::System.String value);
        partial void OnStructure_FactChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Facility_Fact
        {
            get
            {
                return _Facility_Fact;
            }
            set
            {
                OnFacility_FactChanging(value);
                ReportPropertyChanging("Facility_Fact");
                _Facility_Fact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Facility_Fact");
                OnFacility_FactChanged();
            }
        }
        private global::System.String _Facility_Fact;
        partial void OnFacility_FactChanging(global::System.String value);
        partial void OnFacility_FactChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ownership_Fact
        {
            get
            {
                return _Ownership_Fact;
            }
            set
            {
                OnOwnership_FactChanging(value);
                ReportPropertyChanging("Ownership_Fact");
                _Ownership_Fact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ownership_Fact");
                OnOwnership_FactChanged();
            }
        }
        private global::System.String _Ownership_Fact;
        partial void OnOwnership_FactChanging(global::System.String value);
        partial void OnOwnership_FactChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Flat_Fact
        {
            get
            {
                return _Flat_Fact;
            }
            set
            {
                OnFlat_FactChanging(value);
                ReportPropertyChanging("Flat_Fact");
                _Flat_Fact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Flat_Fact");
                OnFlat_FactChanged();
            }
        }
        private global::System.String _Flat_Fact;
        partial void OnFlat_FactChanging(global::System.String value);
        partial void OnFlat_FactChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Gps
        {
            get
            {
                return _Gps;
            }
            set
            {
                OnGpsChanging(value);
                ReportPropertyChanging("Gps");
                _Gps = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gps");
                OnGpsChanged();
            }
        }
        private Nullable<global::System.Boolean> _Gps;
        partial void OnGpsChanging(Nullable<global::System.Boolean> value);
        partial void OnGpsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Taxometr
        {
            get
            {
                return _Taxometr;
            }
            set
            {
                OnTaxometrChanging(value);
                ReportPropertyChanging("Taxometr");
                _Taxometr = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Taxometr");
                OnTaxometrChanged();
            }
        }
        private Nullable<global::System.Boolean> _Taxometr;
        partial void OnTaxometrChanging(Nullable<global::System.Boolean> value);
        partial void OnTaxometrChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TODate
        {
            get
            {
                return _TODate;
            }
            set
            {
                OnTODateChanging(value);
                ReportPropertyChanging("TODate");
                _TODate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TODate");
                OnTODateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TODate;
        partial void OnTODateChanging(Nullable<global::System.DateTime> value);
        partial void OnTODateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String STSNumber
        {
            get
            {
                return _STSNumber;
            }
            set
            {
                OnSTSNumberChanging(value);
                ReportPropertyChanging("STSNumber");
                _STSNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("STSNumber");
                OnSTSNumberChanged();
            }
        }
        private global::System.String _STSNumber;
        partial void OnSTSNumberChanging(global::System.String value);
        partial void OnSTSNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> STSDate
        {
            get
            {
                return _STSDate;
            }
            set
            {
                OnSTSDateChanging(value);
                ReportPropertyChanging("STSDate");
                _STSDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("STSDate");
                OnSTSDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _STSDate;
        partial void OnSTSDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSTSDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OwnType
        {
            get
            {
                return _OwnType;
            }
            set
            {
                OnOwnTypeChanging(value);
                ReportPropertyChanging("OwnType");
                _OwnType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnType");
                OnOwnTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _OwnType;
        partial void OnOwnTypeChanging(Nullable<global::System.Int32> value);
        partial void OnOwnTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnNumber
        {
            get
            {
                return _OwnNumber;
            }
            set
            {
                OnOwnNumberChanging(value);
                ReportPropertyChanging("OwnNumber");
                _OwnNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OwnNumber");
                OnOwnNumberChanged();
            }
        }
        private global::System.String _OwnNumber;
        partial void OnOwnNumberChanging(global::System.String value);
        partial void OnOwnNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OwnDate
        {
            get
            {
                return _OwnDate;
            }
            set
            {
                OnOwnDateChanging(value);
                ReportPropertyChanging("OwnDate");
                _OwnDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnDate");
                OnOwnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OwnDate;
        partial void OnOwnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOwnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> MO
        {
            get
            {
                return _MO;
            }
            set
            {
                OnMOChanging(value);
                ReportPropertyChanging("MO");
                _MO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MO");
                OnMOChanged();
            }
        }
        private Nullable<global::System.Boolean> _MO;
        partial void OnMOChanging(Nullable<global::System.Boolean> value);
        partial void OnMOChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GUID_MO
        {
            get
            {
                return _GUID_MO;
            }
            set
            {
                OnGUID_MOChanging(value);
                ReportPropertyChanging("GUID_MO");
                _GUID_MO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GUID_MO");
                OnGUID_MOChanged();
            }
        }
        private global::System.String _GUID_MO;
        partial void OnGUID_MOChanging(global::System.String value);
        partial void OnGUID_MOChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DATE_MO
        {
            get
            {
                return _DATE_MO;
            }
            set
            {
                OnDATE_MOChanging(value);
                ReportPropertyChanging("DATE_MO");
                _DATE_MO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATE_MO");
                OnDATE_MOChanged();
            }
        }
        private Nullable<global::System.DateTime> _DATE_MO;
        partial void OnDATE_MOChanging(Nullable<global::System.DateTime> value);
        partial void OnDATE_MOChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Obsolete
        {
            get
            {
                return _Obsolete;
            }
            set
            {
                OnObsoleteChanging(value);
                ReportPropertyChanging("Obsolete");
                _Obsolete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Obsolete");
                OnObsoleteChanged();
            }
        }
        private Nullable<global::System.Boolean> _Obsolete;
        partial void OnObsoleteChanging(Nullable<global::System.Boolean> value);
        partial void OnObsoleteChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DisableGibddSend
        {
            get
            {
                return _DisableGibddSend;
            }
            set
            {
                OnDisableGibddSendChanging(value);
                ReportPropertyChanging("DisableGibddSend");
                _DisableGibddSend = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisableGibddSend");
                OnDisableGibddSendChanged();
            }
        }
        private Nullable<global::System.Boolean> _DisableGibddSend;
        partial void OnDisableGibddSendChanging(Nullable<global::System.Boolean> value);
        partial void OnDisableGibddSendChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TM.DataModel", "FK_License_ToLicense_Parent", "License1")]
        public EntityCollection<License> License1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<License>("TM.DataModel.FK_License_ToLicense_Parent", "License1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<License>("TM.DataModel.FK_License_ToLicense_Parent", "License1", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TM.DataModel", "FK_License_ToLicense_Parent", "License")]
        public License License2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<License>("TM.DataModel.FK_License_ToLicense_Parent", "License").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<License>("TM.DataModel.FK_License_ToLicense_Parent", "License").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<License> License2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<License>("TM.DataModel.FK_License_ToLicense_Parent", "License");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<License>("TM.DataModel.FK_License_ToLicense_Parent", "License", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TM.DataModel", "FK_License_ToLicense_RootParent", "License1")]
        public EntityCollection<License> License11
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<License>("TM.DataModel.FK_License_ToLicense_RootParent", "License1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<License>("TM.DataModel.FK_License_ToLicense_RootParent", "License1", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TM.DataModel", "FK_License_ToLicense_RootParent", "License")]
        public License License3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<License>("TM.DataModel.FK_License_ToLicense_RootParent", "License").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<License>("TM.DataModel.FK_License_ToLicense_RootParent", "License").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<License> License3Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<License>("TM.DataModel.FK_License_ToLicense_RootParent", "License");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<License>("TM.DataModel.FK_License_ToLicense_RootParent", "License", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TM.DataModel", "FK_SpecialVehiclesRegister_License", "SpecialVehiclesRegister")]
        public EntityCollection<SpecialVehiclesRegister> SpecialVehiclesRegister
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecialVehiclesRegister>("TM.DataModel.FK_SpecialVehiclesRegister_License", "SpecialVehiclesRegister");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecialVehiclesRegister>("TM.DataModel.FK_SpecialVehiclesRegister_License", "SpecialVehiclesRegister", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TM.DataModel", Name="SpecialVehiclesRegister")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpecialVehiclesRegister : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта SpecialVehiclesRegister.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        public static SpecialVehiclesRegister CreateSpecialVehiclesRegister(global::System.Guid id)
        {
            SpecialVehiclesRegister specialVehiclesRegister = new SpecialVehiclesRegister();
            specialVehiclesRegister.ID = id;
            return specialVehiclesRegister;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> License_id
        {
            get
            {
                return _License_id;
            }
            set
            {
                OnLicense_idChanging(value);
                ReportPropertyChanging("License_id");
                _License_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("License_id");
                OnLicense_idChanged();
            }
        }
        private Nullable<global::System.Int32> _License_id;
        partial void OnLicense_idChanging(Nullable<global::System.Int32> value);
        partial void OnLicense_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RecordId
        {
            get
            {
                return _RecordId;
            }
            set
            {
                OnRecordIdChanging(value);
                ReportPropertyChanging("RecordId");
                _RecordId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecordId");
                OnRecordIdChanged();
            }
        }
        private Nullable<global::System.Decimal> _RecordId;
        partial void OnRecordIdChanging(Nullable<global::System.Decimal> value);
        partial void OnRecordIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PackageId
        {
            get
            {
                return _PackageId;
            }
            set
            {
                OnPackageIdChanging(value);
                ReportPropertyChanging("PackageId");
                _PackageId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PackageId");
                OnPackageIdChanged();
            }
        }
        private global::System.String _PackageId;
        partial void OnPackageIdChanging(global::System.String value);
        partial void OnPackageIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProccessingStageCode
        {
            get
            {
                return _ProccessingStageCode;
            }
            set
            {
                OnProccessingStageCodeChanging(value);
                ReportPropertyChanging("ProccessingStageCode");
                _ProccessingStageCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProccessingStageCode");
                OnProccessingStageCodeChanged();
            }
        }
        private global::System.String _ProccessingStageCode;
        partial void OnProccessingStageCodeChanging(global::System.String value);
        partial void OnProccessingStageCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ProcessingStageDate
        {
            get
            {
                return _ProcessingStageDate;
            }
            set
            {
                OnProcessingStageDateChanging(value);
                ReportPropertyChanging("ProcessingStageDate");
                _ProcessingStageDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProcessingStageDate");
                OnProcessingStageDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ProcessingStageDate;
        partial void OnProcessingStageDateChanging(Nullable<global::System.DateTime> value);
        partial void OnProcessingStageDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProcessingStageInfo
        {
            get
            {
                return _ProcessingStageInfo;
            }
            set
            {
                OnProcessingStageInfoChanging(value);
                ReportPropertyChanging("ProcessingStageInfo");
                _ProcessingStageInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProcessingStageInfo");
                OnProcessingStageInfoChanged();
            }
        }
        private global::System.String _ProcessingStageInfo;
        partial void OnProcessingStageInfoChanging(global::System.String value);
        partial void OnProcessingStageInfoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecordStatusCode
        {
            get
            {
                return _RecordStatusCode;
            }
            set
            {
                OnRecordStatusCodeChanging(value);
                ReportPropertyChanging("RecordStatusCode");
                _RecordStatusCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecordStatusCode");
                OnRecordStatusCodeChanged();
            }
        }
        private global::System.String _RecordStatusCode;
        partial void OnRecordStatusCodeChanging(global::System.String value);
        partial void OnRecordStatusCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecordStatusText
        {
            get
            {
                return _RecordStatusText;
            }
            set
            {
                OnRecordStatusTextChanging(value);
                ReportPropertyChanging("RecordStatusText");
                _RecordStatusText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecordStatusText");
                OnRecordStatusTextChanged();
            }
        }
        private global::System.String _RecordStatusText;
        partial void OnRecordStatusTextChanging(global::System.String value);
        partial void OnRecordStatusTextChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Exception
        {
            get
            {
                return _Exception;
            }
            set
            {
                OnExceptionChanging(value);
                ReportPropertyChanging("Exception");
                _Exception = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Exception");
                OnExceptionChanged();
            }
        }
        private global::System.String _Exception;
        partial void OnExceptionChanging(global::System.String value);
        partial void OnExceptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TM.DataModel", "FK_SpecialVehiclesRegister_License", "License")]
        public License License
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<License>("TM.DataModel.FK_SpecialVehiclesRegister_License", "License").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<License>("TM.DataModel.FK_SpecialVehiclesRegister_License", "License").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<License> LicenseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<License>("TM.DataModel.FK_SpecialVehiclesRegister_License", "License");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<License>("TM.DataModel.FK_SpecialVehiclesRegister_License", "License", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
