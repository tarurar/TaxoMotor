// <copyright file="TaxiEntityServices.cs" company="Armd">
// Copyright Armd. All rights reserved.
// </copyright>
// <author>SPDEV\developer</author>
// <date>2014-09-30 12:37:24Z</date>
// <auto-generated>
//   Generated with SharePoint Software Factory 4.1
// </auto-generated>
namespace TM.SP.BCSModels.Taxi
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Data;
    using System.Data.Sql;
    using System.Data.SqlClient;
    using System.Data.SqlTypes;
    using System.Runtime.InteropServices;
    using Microsoft.BusinessData;
    using Microsoft.BusinessData.SystemSpecific;

    using TM.Utils;

    // Base class to share connection string retrieval for all entities
    [System.CodeDom.Compiler.GeneratedCode("SPSF", "4.1")]
    public class TaxiService : IContextProperty
    {
        public Microsoft.BusinessData.Runtime.IExecutionContext ExecutionContext
        {
            get;
            set;
        }

        public Microsoft.BusinessData.MetadataModel.ILobSystemInstance LobSystemInstance
        {
            get;
            set;
        }

        public Microsoft.BusinessData.MetadataModel.IMethodInstance MethodInstance
        {
            get;
            set;
        }

        protected SqlConnection getSqlConnection()
        {
            var secureStoreAppId = BCS.GetLobSystemProperty(this.LobSystemInstance, "SecureStoreAppId");

            var cBuilder = new SqlConnectionStringBuilder()
            {
                DataSource     = BCS.GetLobSystemProperty(this.LobSystemInstance, "DBServerName"),
                InitialCatalog = BCS.GetLobSystemProperty(this.LobSystemInstance, "DBName"),
                UserID         = Security.GetSecureStoreUserNameCredential(secureStoreAppId),
                Password       = Security.GetSecureStorePasswordCredential(secureStoreAppId)
            };

            return new SqlConnection(cBuilder.ConnectionString);
        }
    }
    /// <summary>
    /// All the methods for retrieving, updating and deleting data are implemented in this class file.
    /// The samples below show the finder and specific finder method for Entity1.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("SPSF", "4.1")]
    public class LicenseEntityService : TaxiService
    {
        public License ReadLicenseItem(System.Int32 Id)
        {
            SqlConnection thisConn = null;
            License entity = null;

            entity = new License();
            thisConn = getSqlConnection();
            thisConn.Open();
            SqlCommand selectCommand = new SqlCommand();
            selectCommand.CommandText = "SELECT [Id] , [Title] , [RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason] FROM [dbo].[License] WHERE [Id] = @Id";
            selectCommand.Parameters.AddWithValue("@Id", Id);

            selectCommand.Connection = thisConn;
            SqlDataReader thisReader = selectCommand.ExecuteReader(CommandBehavior.CloseConnection);
            if (thisReader.Read())
            {
                entity.Id = (System.Int32)thisReader["Id"];
                entity.Title = (thisReader["Title"] == DBNull.Value) ? null : thisReader["Title"].ToString();
                entity.RegNumber = (thisReader["RegNumber"] == DBNull.Value) ? null : thisReader["RegNumber"].ToString();
                entity.BlankSeries = (thisReader["BlankSeries"] == DBNull.Value) ? null : thisReader["BlankSeries"].ToString();
                entity.BlankNo = (thisReader["BlankNo"] == DBNull.Value) ? null : thisReader["BlankNo"].ToString();
                entity.OrgName = (thisReader["OrgName"] == DBNull.Value) ? null : thisReader["OrgName"].ToString();
                entity.Ogrn = (thisReader["Ogrn"] == DBNull.Value) ? null : thisReader["Ogrn"].ToString();
                entity.Inn = (thisReader["Inn"] == DBNull.Value) ? null : thisReader["Inn"].ToString();
                entity.Parent = thisReader["Parent"] as System.Nullable<System.Int32>;
                entity.Status = thisReader["Status"] as System.Nullable<System.Int32>;
                entity.Document = (thisReader["Document"] == DBNull.Value) ? null : thisReader["Document"].ToString();
                entity.Signature = (thisReader["Signature"] == DBNull.Value) ? null : thisReader["Signature"].ToString();
                entity.TaxiId = thisReader["TaxiId"] as System.Nullable<System.Int32>;
                entity.Lfb = (thisReader["Lfb"] == DBNull.Value) ? null : thisReader["Lfb"].ToString();
                entity.JuridicalAddress = (thisReader["JuridicalAddress"] == DBNull.Value) ? null : thisReader["JuridicalAddress"].ToString();
                entity.PhoneNumber = (thisReader["PhoneNumber"] == DBNull.Value) ? null : thisReader["PhoneNumber"].ToString();
                entity.AddContactData = (thisReader["AddContactData"] == DBNull.Value) ? null : thisReader["AddContactData"].ToString();
                entity.AccountAbbr = (thisReader["AccountAbbr"] == DBNull.Value) ? null : thisReader["AccountAbbr"].ToString();
                entity.TaxiBrand = (thisReader["TaxiBrand"] == DBNull.Value) ? null : thisReader["TaxiBrand"].ToString();
                entity.TaxiModel = (thisReader["TaxiModel"] == DBNull.Value) ? null : thisReader["TaxiModel"].ToString();
                entity.TaxiStateNumber = (thisReader["TaxiStateNumber"] == DBNull.Value) ? null : thisReader["TaxiStateNumber"].ToString();
                entity.TaxiYear = thisReader["TaxiYear"] as System.Nullable<System.Int32>;
                entity.OutputDate = thisReader["OutputDate"] as System.Nullable<System.DateTime>;
                entity.CreationDate = thisReader["CreationDate"] as System.Nullable<System.DateTime>;
                entity.TillDate = thisReader["TillDate"] as System.Nullable<System.DateTime>;
                entity.TillSuspensionDate = thisReader["TillSuspensionDate"] as System.Nullable<System.DateTime>;
                entity.CancellationReason = (thisReader["CancellationReason"] == DBNull.Value) ? null : thisReader["CancellationReason"].ToString();
                entity.SuspensionReason = (thisReader["SuspensionReason"] == DBNull.Value) ? null : thisReader["SuspensionReason"].ToString();
                entity.ChangeReason = (thisReader["ChangeReason"] == DBNull.Value) ? null : thisReader["ChangeReason"].ToString();
                entity.InvalidReason = (thisReader["InvalidReason"] == DBNull.Value) ? null : thisReader["InvalidReason"].ToString();
            }
            else
            {
                throw new Exception("Data not found");
            }
            thisReader.Close();
            return (entity);
        }

        public IList<License> ReadLicenseList()
        {
            SqlConnection thisConn = null;
            List<License> allEntities = new List<License>();

            thisConn = getSqlConnection();
            thisConn.Open();
            SqlCommand selectCommand = new SqlCommand();
            selectCommand.Connection = thisConn;
            selectCommand.CommandText = "SELECT [Id] , [Title] , [RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason] FROM [dbo].[License]";
            SqlDataReader thisReader = selectCommand.ExecuteReader(CommandBehavior.CloseConnection);
            while (thisReader.Read())
            {
                License entity = new License();

                entity.Id = (System.Int32)thisReader["Id"];
                entity.Title = (thisReader["Title"] == DBNull.Value) ? null : thisReader["Title"].ToString();
                entity.RegNumber = (thisReader["RegNumber"] == DBNull.Value) ? null : thisReader["RegNumber"].ToString();
                entity.BlankSeries = (thisReader["BlankSeries"] == DBNull.Value) ? null : thisReader["BlankSeries"].ToString();
                entity.BlankNo = (thisReader["BlankNo"] == DBNull.Value) ? null : thisReader["BlankNo"].ToString();
                entity.OrgName = (thisReader["OrgName"] == DBNull.Value) ? null : thisReader["OrgName"].ToString();
                entity.Ogrn = (thisReader["Ogrn"] == DBNull.Value) ? null : thisReader["Ogrn"].ToString();
                entity.Inn = (thisReader["Inn"] == DBNull.Value) ? null : thisReader["Inn"].ToString();
                entity.Parent = thisReader["Parent"] as System.Nullable<System.Int32>;
                entity.Status = thisReader["Status"] as System.Nullable<System.Int32>;
                entity.Document = (thisReader["Document"] == DBNull.Value) ? null : thisReader["Document"].ToString();
                entity.Signature = (thisReader["Signature"] == DBNull.Value) ? null : thisReader["Signature"].ToString();
                entity.TaxiId = thisReader["TaxiId"] as System.Nullable<System.Int32>;
                entity.Lfb = (thisReader["Lfb"] == DBNull.Value) ? null : thisReader["Lfb"].ToString();
                entity.JuridicalAddress = (thisReader["JuridicalAddress"] == DBNull.Value) ? null : thisReader["JuridicalAddress"].ToString();
                entity.PhoneNumber = (thisReader["PhoneNumber"] == DBNull.Value) ? null : thisReader["PhoneNumber"].ToString();
                entity.AddContactData = (thisReader["AddContactData"] == DBNull.Value) ? null : thisReader["AddContactData"].ToString();
                entity.AccountAbbr = (thisReader["AccountAbbr"] == DBNull.Value) ? null : thisReader["AccountAbbr"].ToString();
                entity.TaxiBrand = (thisReader["TaxiBrand"] == DBNull.Value) ? null : thisReader["TaxiBrand"].ToString();
                entity.TaxiModel = (thisReader["TaxiModel"] == DBNull.Value) ? null : thisReader["TaxiModel"].ToString();
                entity.TaxiStateNumber = (thisReader["TaxiStateNumber"] == DBNull.Value) ? null : thisReader["TaxiStateNumber"].ToString();
                entity.TaxiYear = thisReader["TaxiYear"] as System.Nullable<System.Int32>;
                entity.OutputDate = thisReader["OutputDate"] as System.Nullable<System.DateTime>;
                entity.CreationDate = thisReader["CreationDate"] as System.Nullable<System.DateTime>;
                entity.TillDate = thisReader["TillDate"] as System.Nullable<System.DateTime>;
                entity.TillSuspensionDate = thisReader["TillSuspensionDate"] as System.Nullable<System.DateTime>;
                entity.CancellationReason = (thisReader["CancellationReason"] == DBNull.Value) ? null : thisReader["CancellationReason"].ToString();
                entity.SuspensionReason = (thisReader["SuspensionReason"] == DBNull.Value) ? null : thisReader["SuspensionReason"].ToString();
                entity.ChangeReason = (thisReader["ChangeReason"] == DBNull.Value) ? null : thisReader["ChangeReason"].ToString();
                entity.InvalidReason = (thisReader["InvalidReason"] == DBNull.Value) ? null : thisReader["InvalidReason"].ToString();

                allEntities.Add(entity);
            }
            thisReader.Close();
            return allEntities;
        }

        public License CreateLicense(License newentity)
        {
            License createdEntity = null;
            SqlConnection thisConn = null;
            try
            {
                thisConn = getSqlConnection();
                thisConn.Open();

                SqlCommand createCommand = new SqlCommand();
                createCommand.Connection = thisConn;
                createCommand.CommandText = "INSERT INTO [dbo].[License] ([RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason]) VALUES (@RegNumber , @BlankSeries , @BlankNo , @OrgName , @Ogrn , @Inn , @Parent , @Status , @Document , @Signature , @TaxiId , @Lfb , @JuridicalAddress , @PhoneNumber , @AddContactData , @AccountAbbr , @TaxiBrand , @TaxiModel , @TaxiStateNumber , @TaxiYear , @OutputDate , @CreationDate , @TillDate , @TillSuspensionDate , @CancellationReason , @SuspensionReason , @ChangeReason , @InvalidReason) SELECT [Id] , [Title] , [RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason] FROM [dbo].[License] WHERE [Id] = SCOPE_IDENTITY()";
                createCommand.Parameters.AddWithValue("@Id", newentity.Id);
                createCommand.Parameters.AddWithValue("@RegNumber", (newentity.RegNumber == null) ? (object)DBNull.Value : newentity.RegNumber);
                createCommand.Parameters.AddWithValue("@BlankSeries", (newentity.BlankSeries == null) ? (object)DBNull.Value : newentity.BlankSeries);
                createCommand.Parameters.AddWithValue("@BlankNo", (newentity.BlankNo == null) ? (object)DBNull.Value : newentity.BlankNo);
                createCommand.Parameters.AddWithValue("@OrgName", (newentity.OrgName == null) ? (object)DBNull.Value : newentity.OrgName);
                createCommand.Parameters.AddWithValue("@Ogrn", (newentity.Ogrn == null) ? (object)DBNull.Value : newentity.Ogrn);
                createCommand.Parameters.AddWithValue("@Inn", (newentity.Inn == null) ? (object)DBNull.Value : newentity.Inn);
                createCommand.Parameters.AddWithValue("@Parent", (newentity.Parent == null) ? (object)DBNull.Value : newentity.Parent);
                createCommand.Parameters.AddWithValue("@Status", (newentity.Status == null) ? (object)DBNull.Value : newentity.Status);
                createCommand.Parameters.AddWithValue("@Document", (newentity.Document == null) ? (object)DBNull.Value : newentity.Document);
                createCommand.Parameters.AddWithValue("@Signature", (newentity.Signature == null) ? (object)DBNull.Value : newentity.Signature);
                createCommand.Parameters.AddWithValue("@TaxiId", (newentity.TaxiId == null) ? (object)DBNull.Value : newentity.TaxiId);
                createCommand.Parameters.AddWithValue("@Lfb", (newentity.Lfb == null) ? (object)DBNull.Value : newentity.Lfb);
                createCommand.Parameters.AddWithValue("@JuridicalAddress", (newentity.JuridicalAddress == null) ? (object)DBNull.Value : newentity.JuridicalAddress);
                createCommand.Parameters.AddWithValue("@PhoneNumber", (newentity.PhoneNumber == null) ? (object)DBNull.Value : newentity.PhoneNumber);
                createCommand.Parameters.AddWithValue("@AddContactData", (newentity.AddContactData == null) ? (object)DBNull.Value : newentity.AddContactData);
                createCommand.Parameters.AddWithValue("@AccountAbbr", (newentity.AccountAbbr == null) ? (object)DBNull.Value : newentity.AccountAbbr);
                createCommand.Parameters.AddWithValue("@TaxiBrand", (newentity.TaxiBrand == null) ? (object)DBNull.Value : newentity.TaxiBrand);
                createCommand.Parameters.AddWithValue("@TaxiModel", (newentity.TaxiModel == null) ? (object)DBNull.Value : newentity.TaxiModel);
                createCommand.Parameters.AddWithValue("@TaxiStateNumber", (newentity.TaxiStateNumber == null) ? (object)DBNull.Value : newentity.TaxiStateNumber);
                createCommand.Parameters.AddWithValue("@TaxiYear", (newentity.TaxiYear == null) ? (object)DBNull.Value : newentity.TaxiYear);
                createCommand.Parameters.AddWithValue("@OutputDate", (newentity.OutputDate == null) ? (object)DBNull.Value : newentity.OutputDate);
                createCommand.Parameters.AddWithValue("@CreationDate", (newentity.CreationDate == null) ? (object)DBNull.Value : newentity.CreationDate);
                createCommand.Parameters.AddWithValue("@TillDate", (newentity.TillDate == null) ? (object)DBNull.Value : newentity.TillDate);
                createCommand.Parameters.AddWithValue("@TillSuspensionDate", (newentity.TillSuspensionDate == null) ? (object)DBNull.Value : newentity.TillSuspensionDate);
                createCommand.Parameters.AddWithValue("@CancellationReason", (newentity.CancellationReason == null) ? (object)DBNull.Value : newentity.CancellationReason);
                createCommand.Parameters.AddWithValue("@SuspensionReason", (newentity.SuspensionReason == null) ? (object)DBNull.Value : newentity.SuspensionReason);
                createCommand.Parameters.AddWithValue("@ChangeReason", (newentity.ChangeReason == null) ? (object)DBNull.Value : newentity.ChangeReason);
                createCommand.Parameters.AddWithValue("@InvalidReason", (newentity.InvalidReason == null) ? (object)DBNull.Value : newentity.InvalidReason);


                SqlDataReader thisReader = createCommand.ExecuteReader(CommandBehavior.CloseConnection);
                if (thisReader.Read())
                {
                    createdEntity = new License();

                    createdEntity.Id = (System.Int32)thisReader["Id"];
                    createdEntity.Title = (thisReader["Title"] == DBNull.Value) ? null : thisReader["Title"].ToString();
                    createdEntity.RegNumber = (thisReader["RegNumber"] == DBNull.Value) ? null : thisReader["RegNumber"].ToString();
                    createdEntity.BlankSeries = (thisReader["BlankSeries"] == DBNull.Value) ? null : thisReader["BlankSeries"].ToString();
                    createdEntity.BlankNo = (thisReader["BlankNo"] == DBNull.Value) ? null : thisReader["BlankNo"].ToString();
                    createdEntity.OrgName = (thisReader["OrgName"] == DBNull.Value) ? null : thisReader["OrgName"].ToString();
                    createdEntity.Ogrn = (thisReader["Ogrn"] == DBNull.Value) ? null : thisReader["Ogrn"].ToString();
                    createdEntity.Inn = (thisReader["Inn"] == DBNull.Value) ? null : thisReader["Inn"].ToString();
                    createdEntity.Parent = thisReader["Parent"] as System.Nullable<System.Int32>;
                    createdEntity.Status = thisReader["Status"] as System.Nullable<System.Int32>;
                    createdEntity.Document = (thisReader["Document"] == DBNull.Value) ? null : thisReader["Document"].ToString();
                    createdEntity.Signature = (thisReader["Signature"] == DBNull.Value) ? null : thisReader["Signature"].ToString();
                    createdEntity.TaxiId = thisReader["TaxiId"] as System.Nullable<System.Int32>;
                    createdEntity.Lfb = (thisReader["Lfb"] == DBNull.Value) ? null : thisReader["Lfb"].ToString();
                    createdEntity.JuridicalAddress = (thisReader["JuridicalAddress"] == DBNull.Value) ? null : thisReader["JuridicalAddress"].ToString();
                    createdEntity.PhoneNumber = (thisReader["PhoneNumber"] == DBNull.Value) ? null : thisReader["PhoneNumber"].ToString();
                    createdEntity.AddContactData = (thisReader["AddContactData"] == DBNull.Value) ? null : thisReader["AddContactData"].ToString();
                    createdEntity.AccountAbbr = (thisReader["AccountAbbr"] == DBNull.Value) ? null : thisReader["AccountAbbr"].ToString();
                    createdEntity.TaxiBrand = (thisReader["TaxiBrand"] == DBNull.Value) ? null : thisReader["TaxiBrand"].ToString();
                    createdEntity.TaxiModel = (thisReader["TaxiModel"] == DBNull.Value) ? null : thisReader["TaxiModel"].ToString();
                    createdEntity.TaxiStateNumber = (thisReader["TaxiStateNumber"] == DBNull.Value) ? null : thisReader["TaxiStateNumber"].ToString();
                    createdEntity.TaxiYear = thisReader["TaxiYear"] as System.Nullable<System.Int32>;
                    createdEntity.OutputDate = thisReader["OutputDate"] as System.Nullable<System.DateTime>;
                    createdEntity.CreationDate = thisReader["CreationDate"] as System.Nullable<System.DateTime>;
                    createdEntity.TillDate = thisReader["TillDate"] as System.Nullable<System.DateTime>;
                    createdEntity.TillSuspensionDate = thisReader["TillSuspensionDate"] as System.Nullable<System.DateTime>;
                    createdEntity.CancellationReason = (thisReader["CancellationReason"] == DBNull.Value) ? null : thisReader["CancellationReason"].ToString();
                    createdEntity.SuspensionReason = (thisReader["SuspensionReason"] == DBNull.Value) ? null : thisReader["SuspensionReason"].ToString();
                    createdEntity.ChangeReason = (thisReader["ChangeReason"] == DBNull.Value) ? null : thisReader["ChangeReason"].ToString();
                    createdEntity.InvalidReason = (thisReader["InvalidReason"] == DBNull.Value) ? null : thisReader["InvalidReason"].ToString();
                }
                else
                {
                    throw new Exception("Data not found");
                }
                return createdEntity;
            }
            finally
            {
                thisConn.Dispose();
            }
        }

        public void DeleteLicense(System.Int32 Id)
        {
            SqlConnection thisConn = null;
            try
            {
                thisConn = getSqlConnection();
                thisConn.Open();

                SqlCommand deleteCommand = new SqlCommand();
                deleteCommand.Connection = thisConn;
                deleteCommand.CommandText = "DELETE FROM [dbo].[License] WHERE [Id] = @Id";
                deleteCommand.Parameters.AddWithValue("@Id", Id);
                deleteCommand.ExecuteNonQuery();
            }
            finally
            {
                thisConn.Dispose();
            }

        }


        public void UpdateLicense(License updateLicense)
        {
            SqlConnection thisConn = null;
            try
            {
                thisConn = getSqlConnection();
                thisConn.Open();

                SqlCommand updateCommand = new SqlCommand();
                updateCommand.Connection = thisConn;
                updateCommand.CommandText = "UPDATE [dbo].[License] SET [RegNumber] = @RegNumber , [BlankSeries] = @BlankSeries , [BlankNo] = @BlankNo , [OrgName] = @OrgName , [Ogrn] = @Ogrn , [Inn] = @Inn , [Parent] = @Parent , [Status] = @Status , [Document] = @Document , [Signature] = @Signature , [TaxiId] = @TaxiId , [Lfb] = @Lfb , [JuridicalAddress] = @JuridicalAddress , [PhoneNumber] = @PhoneNumber , [AddContactData] = @AddContactData , [AccountAbbr] = @AccountAbbr , [TaxiBrand] = @TaxiBrand , [TaxiModel] = @TaxiModel , [TaxiStateNumber] = @TaxiStateNumber , [TaxiYear] = @TaxiYear , [OutputDate] = @OutputDate , [CreationDate] = @CreationDate , [TillDate] = @TillDate , [TillSuspensionDate] = @TillSuspensionDate , [CancellationReason] = @CancellationReason , [SuspensionReason] = @SuspensionReason , [ChangeReason] = @ChangeReason , [InvalidReason] = @InvalidReason WHERE [Id] = @Id";

                //add new field values
                updateCommand.Parameters.AddWithValue("@RegNumber", (updateLicense.RegNumber == null) ? (object)DBNull.Value : updateLicense.RegNumber);
                updateCommand.Parameters.AddWithValue("@BlankSeries", (updateLicense.BlankSeries == null) ? (object)DBNull.Value : updateLicense.BlankSeries);
                updateCommand.Parameters.AddWithValue("@BlankNo", (updateLicense.BlankNo == null) ? (object)DBNull.Value : updateLicense.BlankNo);
                updateCommand.Parameters.AddWithValue("@OrgName", (updateLicense.OrgName == null) ? (object)DBNull.Value : updateLicense.OrgName);
                updateCommand.Parameters.AddWithValue("@Ogrn", (updateLicense.Ogrn == null) ? (object)DBNull.Value : updateLicense.Ogrn);
                updateCommand.Parameters.AddWithValue("@Inn", (updateLicense.Inn == null) ? (object)DBNull.Value : updateLicense.Inn);
                updateCommand.Parameters.AddWithValue("@Parent", (updateLicense.Parent == null) ? (object)DBNull.Value : updateLicense.Parent);
                updateCommand.Parameters.AddWithValue("@Status", (updateLicense.Status == null) ? (object)DBNull.Value : updateLicense.Status);
                updateCommand.Parameters.AddWithValue("@Document", (updateLicense.Document == null) ? (object)DBNull.Value : updateLicense.Document);
                updateCommand.Parameters.AddWithValue("@Signature", (updateLicense.Signature == null) ? (object)DBNull.Value : updateLicense.Signature);
                updateCommand.Parameters.AddWithValue("@TaxiId", (updateLicense.TaxiId == null) ? (object)DBNull.Value : updateLicense.TaxiId);
                updateCommand.Parameters.AddWithValue("@Lfb", (updateLicense.Lfb == null) ? (object)DBNull.Value : updateLicense.Lfb);
                updateCommand.Parameters.AddWithValue("@JuridicalAddress", (updateLicense.JuridicalAddress == null) ? (object)DBNull.Value : updateLicense.JuridicalAddress);
                updateCommand.Parameters.AddWithValue("@PhoneNumber", (updateLicense.PhoneNumber == null) ? (object)DBNull.Value : updateLicense.PhoneNumber);
                updateCommand.Parameters.AddWithValue("@AddContactData", (updateLicense.AddContactData == null) ? (object)DBNull.Value : updateLicense.AddContactData);
                updateCommand.Parameters.AddWithValue("@AccountAbbr", (updateLicense.AccountAbbr == null) ? (object)DBNull.Value : updateLicense.AccountAbbr);
                updateCommand.Parameters.AddWithValue("@TaxiBrand", (updateLicense.TaxiBrand == null) ? (object)DBNull.Value : updateLicense.TaxiBrand);
                updateCommand.Parameters.AddWithValue("@TaxiModel", (updateLicense.TaxiModel == null) ? (object)DBNull.Value : updateLicense.TaxiModel);
                updateCommand.Parameters.AddWithValue("@TaxiStateNumber", (updateLicense.TaxiStateNumber == null) ? (object)DBNull.Value : updateLicense.TaxiStateNumber);
                updateCommand.Parameters.AddWithValue("@TaxiYear", (updateLicense.TaxiYear == null) ? (object)DBNull.Value : updateLicense.TaxiYear);
                updateCommand.Parameters.AddWithValue("@OutputDate", (updateLicense.OutputDate == null) ? (object)DBNull.Value : updateLicense.OutputDate);
                updateCommand.Parameters.AddWithValue("@CreationDate", (updateLicense.CreationDate == null) ? (object)DBNull.Value : updateLicense.CreationDate);
                updateCommand.Parameters.AddWithValue("@TillDate", (updateLicense.TillDate == null) ? (object)DBNull.Value : updateLicense.TillDate);
                updateCommand.Parameters.AddWithValue("@TillSuspensionDate", (updateLicense.TillSuspensionDate == null) ? (object)DBNull.Value : updateLicense.TillSuspensionDate);
                updateCommand.Parameters.AddWithValue("@CancellationReason", (updateLicense.CancellationReason == null) ? (object)DBNull.Value : updateLicense.CancellationReason);
                updateCommand.Parameters.AddWithValue("@SuspensionReason", (updateLicense.SuspensionReason == null) ? (object)DBNull.Value : updateLicense.SuspensionReason);
                updateCommand.Parameters.AddWithValue("@ChangeReason", (updateLicense.ChangeReason == null) ? (object)DBNull.Value : updateLicense.ChangeReason);
                updateCommand.Parameters.AddWithValue("@InvalidReason", (updateLicense.InvalidReason == null) ? (object)DBNull.Value : updateLicense.InvalidReason);

                updateCommand.Parameters.AddWithValue("@Id", updateLicense.Id);

                updateCommand.ExecuteNonQuery();
            }
            finally
            {
                thisConn.Dispose();
            }
        }
        public IList<License> IdOfLicenseToParentOfLicense(System.Nullable<System.Int32> Parent)
        {
            SqlConnection thisConn = null;
            List<License> allEntities = new List<License>();

            thisConn = getSqlConnection();
            thisConn.Open();
            SqlCommand selectCommand = new SqlCommand();
            selectCommand.Connection = thisConn;
            selectCommand.CommandText = "SELECT [Id] , [Title] , [RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason] FROM [dbo].[License] WHERE [Parent] = @Parent";

            selectCommand.Parameters.AddWithValue("@Parent", Parent);

            SqlDataReader thisReader = selectCommand.ExecuteReader(CommandBehavior.CloseConnection);
            while (thisReader.Read())
            {
                License entity = new License();

                entity.Id = (System.Int32)thisReader["Id"];
                entity.Title = (thisReader["Title"] == DBNull.Value) ? null : thisReader["Title"].ToString();
                entity.RegNumber = (thisReader["RegNumber"] == DBNull.Value) ? null : thisReader["RegNumber"].ToString();
                entity.BlankSeries = (thisReader["BlankSeries"] == DBNull.Value) ? null : thisReader["BlankSeries"].ToString();
                entity.BlankNo = (thisReader["BlankNo"] == DBNull.Value) ? null : thisReader["BlankNo"].ToString();
                entity.OrgName = (thisReader["OrgName"] == DBNull.Value) ? null : thisReader["OrgName"].ToString();
                entity.Ogrn = (thisReader["Ogrn"] == DBNull.Value) ? null : thisReader["Ogrn"].ToString();
                entity.Inn = (thisReader["Inn"] == DBNull.Value) ? null : thisReader["Inn"].ToString();
                entity.Parent = thisReader["Parent"] as System.Nullable<System.Int32>;
                entity.Status = thisReader["Status"] as System.Nullable<System.Int32>;
                entity.Document = (thisReader["Document"] == DBNull.Value) ? null : thisReader["Document"].ToString();
                entity.Signature = (thisReader["Signature"] == DBNull.Value) ? null : thisReader["Signature"].ToString();
                entity.TaxiId = thisReader["TaxiId"] as System.Nullable<System.Int32>;
                entity.Lfb = (thisReader["Lfb"] == DBNull.Value) ? null : thisReader["Lfb"].ToString();
                entity.JuridicalAddress = (thisReader["JuridicalAddress"] == DBNull.Value) ? null : thisReader["JuridicalAddress"].ToString();
                entity.PhoneNumber = (thisReader["PhoneNumber"] == DBNull.Value) ? null : thisReader["PhoneNumber"].ToString();
                entity.AddContactData = (thisReader["AddContactData"] == DBNull.Value) ? null : thisReader["AddContactData"].ToString();
                entity.AccountAbbr = (thisReader["AccountAbbr"] == DBNull.Value) ? null : thisReader["AccountAbbr"].ToString();
                entity.TaxiBrand = (thisReader["TaxiBrand"] == DBNull.Value) ? null : thisReader["TaxiBrand"].ToString();
                entity.TaxiModel = (thisReader["TaxiModel"] == DBNull.Value) ? null : thisReader["TaxiModel"].ToString();
                entity.TaxiStateNumber = (thisReader["TaxiStateNumber"] == DBNull.Value) ? null : thisReader["TaxiStateNumber"].ToString();
                entity.TaxiYear = thisReader["TaxiYear"] as System.Nullable<System.Int32>;
                entity.OutputDate = thisReader["OutputDate"] as System.Nullable<System.DateTime>;
                entity.CreationDate = thisReader["CreationDate"] as System.Nullable<System.DateTime>;
                entity.TillDate = thisReader["TillDate"] as System.Nullable<System.DateTime>;
                entity.TillSuspensionDate = thisReader["TillSuspensionDate"] as System.Nullable<System.DateTime>;
                entity.CancellationReason = (thisReader["CancellationReason"] == DBNull.Value) ? null : thisReader["CancellationReason"].ToString();
                entity.SuspensionReason = (thisReader["SuspensionReason"] == DBNull.Value) ? null : thisReader["SuspensionReason"].ToString();
                entity.ChangeReason = (thisReader["ChangeReason"] == DBNull.Value) ? null : thisReader["ChangeReason"].ToString();
                entity.InvalidReason = (thisReader["InvalidReason"] == DBNull.Value) ? null : thisReader["InvalidReason"].ToString();

                allEntities.Add(entity);
            }
            thisReader.Close();
            return allEntities;
        }
    }
}

