// <copyright file="TaxiV2EntityServices.cs" company="Armd">
// Copyright Armd. All rights reserved.
// </copyright>
// <author>SPDEV\developer</author>
// <date>2014-10-02 15:05:23Z</date>
// <auto-generated>
//   Generated with SharePoint Software Factory 4.1
// </auto-generated>
namespace TM.SP.BCSModels.TaxiV2
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Data;
    using System.Data.Sql;
    using System.Data.SqlClient;
    using System.Data.SqlTypes;
    using System.Runtime.InteropServices;
    using Microsoft.BusinessData;
    using Microsoft.BusinessData.SystemSpecific;
    using TM.Utils;

    // Base class to share connection string retrieval for all entities
    [System.CodeDom.Compiler.GeneratedCode("SPSF", "4.1")]
    public class TaxiV2Service : IContextProperty
    {
        public Microsoft.BusinessData.Runtime.IExecutionContext ExecutionContext
        {
            get;
            set;
        }

        public Microsoft.BusinessData.MetadataModel.ILobSystemInstance LobSystemInstance
        {
            get;
            set;
        }

        public Microsoft.BusinessData.MetadataModel.IMethodInstance MethodInstance
        {
            get;
            set;
        }
        protected SqlConnection getSqlConnection()
        {
            var secureStoreAppId = BCS.GetLobSystemProperty(this.LobSystemInstance, "SecureStoreAppId");

            var cBuilder = new SqlConnectionStringBuilder()
            {
                DataSource     = BCS.GetLobSystemProperty(this.LobSystemInstance, "DBServerName"),
                InitialCatalog = BCS.GetLobSystemProperty(this.LobSystemInstance, "DBName"),
                UserID         = Security.GetSecureStoreUserNameCredential(secureStoreAppId),
                Password       = Security.GetSecureStorePasswordCredential(secureStoreAppId)
            };

            return new SqlConnection(cBuilder.ConnectionString);
        }
    }
    /// <summary>
    /// All the methods for retrieving, updating and deleting data are implemented in this class file.
    /// The samples below show the finder and specific finder method for Entity1.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("SPSF", "4.1")]
    public class LicenseActingViewEntityService : TaxiV2Service
    {
        public LicenseActingView ReadLicenseActingViewItem(System.Int32 Id)
        {
            SqlConnection thisConn = null;
            LicenseActingView entity = null;

            entity = new LicenseActingView();
            thisConn = getSqlConnection();
            thisConn.Open();
            SqlCommand selectCommand = new SqlCommand();
            selectCommand.CommandText = "SELECT [Id] , [Title] , [RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason] FROM [dbo].[LicenseActing] WHERE [Id] = @Id";
            selectCommand.Parameters.AddWithValue("@Id", Id);

            selectCommand.Connection = thisConn;
            SqlDataReader thisReader = selectCommand.ExecuteReader(CommandBehavior.CloseConnection);
            if (thisReader.Read())
            {
                entity.Id = (System.Int32)thisReader["Id"];
                entity.Title = (thisReader["Title"] == DBNull.Value) ? null : thisReader["Title"].ToString();
                entity.RegNumber = (thisReader["RegNumber"] == DBNull.Value) ? null : thisReader["RegNumber"].ToString();
                entity.BlankSeries = (thisReader["BlankSeries"] == DBNull.Value) ? null : thisReader["BlankSeries"].ToString();
                entity.BlankNo = (thisReader["BlankNo"] == DBNull.Value) ? null : thisReader["BlankNo"].ToString();
                entity.OrgName = (thisReader["OrgName"] == DBNull.Value) ? null : thisReader["OrgName"].ToString();
                entity.Ogrn = (thisReader["Ogrn"] == DBNull.Value) ? null : thisReader["Ogrn"].ToString();
                entity.Inn = (thisReader["Inn"] == DBNull.Value) ? null : thisReader["Inn"].ToString();
                entity.Parent = thisReader["Parent"] as System.Nullable<System.Int32>;
                entity.Status = thisReader["Status"] as System.Nullable<System.Int32>;
                entity.Document = (thisReader["Document"] == DBNull.Value) ? null : thisReader["Document"].ToString();
                entity.Signature = (thisReader["Signature"] == DBNull.Value) ? null : thisReader["Signature"].ToString();
                entity.TaxiId = thisReader["TaxiId"] as System.Nullable<System.Int32>;
                entity.Lfb = (thisReader["Lfb"] == DBNull.Value) ? null : thisReader["Lfb"].ToString();
                entity.JuridicalAddress = (thisReader["JuridicalAddress"] == DBNull.Value) ? null : thisReader["JuridicalAddress"].ToString();
                entity.PhoneNumber = (thisReader["PhoneNumber"] == DBNull.Value) ? null : thisReader["PhoneNumber"].ToString();
                entity.AddContactData = (thisReader["AddContactData"] == DBNull.Value) ? null : thisReader["AddContactData"].ToString();
                entity.AccountAbbr = (thisReader["AccountAbbr"] == DBNull.Value) ? null : thisReader["AccountAbbr"].ToString();
                entity.TaxiBrand = (thisReader["TaxiBrand"] == DBNull.Value) ? null : thisReader["TaxiBrand"].ToString();
                entity.TaxiModel = (thisReader["TaxiModel"] == DBNull.Value) ? null : thisReader["TaxiModel"].ToString();
                entity.TaxiStateNumber = (thisReader["TaxiStateNumber"] == DBNull.Value) ? null : thisReader["TaxiStateNumber"].ToString();
                entity.TaxiYear = thisReader["TaxiYear"] as System.Nullable<System.Int32>;
                entity.OutputDate = thisReader["OutputDate"] as System.Nullable<System.DateTime>;
                entity.CreationDate = thisReader["CreationDate"] as System.Nullable<System.DateTime>;
                entity.TillDate = thisReader["TillDate"] as System.Nullable<System.DateTime>;
                entity.TillSuspensionDate = thisReader["TillSuspensionDate"] as System.Nullable<System.DateTime>;
                entity.CancellationReason = (thisReader["CancellationReason"] == DBNull.Value) ? null : thisReader["CancellationReason"].ToString();
                entity.SuspensionReason = (thisReader["SuspensionReason"] == DBNull.Value) ? null : thisReader["SuspensionReason"].ToString();
                entity.ChangeReason = (thisReader["ChangeReason"] == DBNull.Value) ? null : thisReader["ChangeReason"].ToString();
                entity.InvalidReason = (thisReader["InvalidReason"] == DBNull.Value) ? null : thisReader["InvalidReason"].ToString();
            }
            else
            {
                throw new Exception("Data not found");
            }
            thisReader.Close();
            return (entity);
        }

        public IList<LicenseActingView> ReadLicenseActingViewList()
        {
            SqlConnection thisConn = null;
            List<LicenseActingView> allEntities = new List<LicenseActingView>();

            thisConn = getSqlConnection();
            thisConn.Open();
            SqlCommand selectCommand = new SqlCommand();
            selectCommand.Connection = thisConn;
            selectCommand.CommandText = "SELECT [Id] , [Title] , [RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason] FROM [dbo].[LicenseActing]";
            SqlDataReader thisReader = selectCommand.ExecuteReader(CommandBehavior.CloseConnection);
            while (thisReader.Read())
            {
                LicenseActingView entity = new LicenseActingView();

                entity.Id = (System.Int32)thisReader["Id"];
                entity.Title = (thisReader["Title"] == DBNull.Value) ? null : thisReader["Title"].ToString();
                entity.RegNumber = (thisReader["RegNumber"] == DBNull.Value) ? null : thisReader["RegNumber"].ToString();
                entity.BlankSeries = (thisReader["BlankSeries"] == DBNull.Value) ? null : thisReader["BlankSeries"].ToString();
                entity.BlankNo = (thisReader["BlankNo"] == DBNull.Value) ? null : thisReader["BlankNo"].ToString();
                entity.OrgName = (thisReader["OrgName"] == DBNull.Value) ? null : thisReader["OrgName"].ToString();
                entity.Ogrn = (thisReader["Ogrn"] == DBNull.Value) ? null : thisReader["Ogrn"].ToString();
                entity.Inn = (thisReader["Inn"] == DBNull.Value) ? null : thisReader["Inn"].ToString();
                entity.Parent = thisReader["Parent"] as System.Nullable<System.Int32>;
                entity.Status = thisReader["Status"] as System.Nullable<System.Int32>;
                entity.Document = (thisReader["Document"] == DBNull.Value) ? null : thisReader["Document"].ToString();
                entity.Signature = (thisReader["Signature"] == DBNull.Value) ? null : thisReader["Signature"].ToString();
                entity.TaxiId = thisReader["TaxiId"] as System.Nullable<System.Int32>;
                entity.Lfb = (thisReader["Lfb"] == DBNull.Value) ? null : thisReader["Lfb"].ToString();
                entity.JuridicalAddress = (thisReader["JuridicalAddress"] == DBNull.Value) ? null : thisReader["JuridicalAddress"].ToString();
                entity.PhoneNumber = (thisReader["PhoneNumber"] == DBNull.Value) ? null : thisReader["PhoneNumber"].ToString();
                entity.AddContactData = (thisReader["AddContactData"] == DBNull.Value) ? null : thisReader["AddContactData"].ToString();
                entity.AccountAbbr = (thisReader["AccountAbbr"] == DBNull.Value) ? null : thisReader["AccountAbbr"].ToString();
                entity.TaxiBrand = (thisReader["TaxiBrand"] == DBNull.Value) ? null : thisReader["TaxiBrand"].ToString();
                entity.TaxiModel = (thisReader["TaxiModel"] == DBNull.Value) ? null : thisReader["TaxiModel"].ToString();
                entity.TaxiStateNumber = (thisReader["TaxiStateNumber"] == DBNull.Value) ? null : thisReader["TaxiStateNumber"].ToString();
                entity.TaxiYear = thisReader["TaxiYear"] as System.Nullable<System.Int32>;
                entity.OutputDate = thisReader["OutputDate"] as System.Nullable<System.DateTime>;
                entity.CreationDate = thisReader["CreationDate"] as System.Nullable<System.DateTime>;
                entity.TillDate = thisReader["TillDate"] as System.Nullable<System.DateTime>;
                entity.TillSuspensionDate = thisReader["TillSuspensionDate"] as System.Nullable<System.DateTime>;
                entity.CancellationReason = (thisReader["CancellationReason"] == DBNull.Value) ? null : thisReader["CancellationReason"].ToString();
                entity.SuspensionReason = (thisReader["SuspensionReason"] == DBNull.Value) ? null : thisReader["SuspensionReason"].ToString();
                entity.ChangeReason = (thisReader["ChangeReason"] == DBNull.Value) ? null : thisReader["ChangeReason"].ToString();
                entity.InvalidReason = (thisReader["InvalidReason"] == DBNull.Value) ? null : thisReader["InvalidReason"].ToString();

                allEntities.Add(entity);
            }
            thisReader.Close();
            return allEntities;
        }
    }
    /// <summary>
    /// All the methods for retrieving, updating and deleting data are implemented in this class file.
    /// The samples below show the finder and specific finder method for Entity1.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("SPSF", "4.1")]
    public class LicenseAllViewEntityService : TaxiV2Service
    {
        public LicenseAllView ReadLicenseAllViewItem(System.Int32 Id)
        {
            SqlConnection thisConn = null;
            LicenseAllView entity = null;

            entity = new LicenseAllView();
            thisConn = getSqlConnection();
            thisConn.Open();
            SqlCommand selectCommand = new SqlCommand();
            selectCommand.CommandText = "SELECT [Id] , [Title] , [RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason] , [IsLast] FROM [dbo].[LicenseAll] WHERE [Id] = @Id";
            selectCommand.Parameters.AddWithValue("@Id", Id);

            selectCommand.Connection = thisConn;
            SqlDataReader thisReader = selectCommand.ExecuteReader(CommandBehavior.CloseConnection);
            if (thisReader.Read())
            {
                entity.Id = (System.Int32)thisReader["Id"];
                entity.Title = (thisReader["Title"] == DBNull.Value) ? null : thisReader["Title"].ToString();
                entity.RegNumber = (thisReader["RegNumber"] == DBNull.Value) ? null : thisReader["RegNumber"].ToString();
                entity.BlankSeries = (thisReader["BlankSeries"] == DBNull.Value) ? null : thisReader["BlankSeries"].ToString();
                entity.BlankNo = (thisReader["BlankNo"] == DBNull.Value) ? null : thisReader["BlankNo"].ToString();
                entity.OrgName = (thisReader["OrgName"] == DBNull.Value) ? null : thisReader["OrgName"].ToString();
                entity.Ogrn = (thisReader["Ogrn"] == DBNull.Value) ? null : thisReader["Ogrn"].ToString();
                entity.Inn = (thisReader["Inn"] == DBNull.Value) ? null : thisReader["Inn"].ToString();
                entity.Parent = thisReader["Parent"] as System.Nullable<System.Int32>;
                entity.Status = thisReader["Status"] as System.Nullable<System.Int32>;
                entity.Document = (thisReader["Document"] == DBNull.Value) ? null : thisReader["Document"].ToString();
                entity.Signature = (thisReader["Signature"] == DBNull.Value) ? null : thisReader["Signature"].ToString();
                entity.TaxiId = thisReader["TaxiId"] as System.Nullable<System.Int32>;
                entity.Lfb = (thisReader["Lfb"] == DBNull.Value) ? null : thisReader["Lfb"].ToString();
                entity.JuridicalAddress = (thisReader["JuridicalAddress"] == DBNull.Value) ? null : thisReader["JuridicalAddress"].ToString();
                entity.PhoneNumber = (thisReader["PhoneNumber"] == DBNull.Value) ? null : thisReader["PhoneNumber"].ToString();
                entity.AddContactData = (thisReader["AddContactData"] == DBNull.Value) ? null : thisReader["AddContactData"].ToString();
                entity.AccountAbbr = (thisReader["AccountAbbr"] == DBNull.Value) ? null : thisReader["AccountAbbr"].ToString();
                entity.TaxiBrand = (thisReader["TaxiBrand"] == DBNull.Value) ? null : thisReader["TaxiBrand"].ToString();
                entity.TaxiModel = (thisReader["TaxiModel"] == DBNull.Value) ? null : thisReader["TaxiModel"].ToString();
                entity.TaxiStateNumber = (thisReader["TaxiStateNumber"] == DBNull.Value) ? null : thisReader["TaxiStateNumber"].ToString();
                entity.TaxiYear = thisReader["TaxiYear"] as System.Nullable<System.Int32>;
                entity.OutputDate = thisReader["OutputDate"] as System.Nullable<System.DateTime>;
                entity.CreationDate = thisReader["CreationDate"] as System.Nullable<System.DateTime>;
                entity.TillDate = thisReader["TillDate"] as System.Nullable<System.DateTime>;
                entity.TillSuspensionDate = thisReader["TillSuspensionDate"] as System.Nullable<System.DateTime>;
                entity.CancellationReason = (thisReader["CancellationReason"] == DBNull.Value) ? null : thisReader["CancellationReason"].ToString();
                entity.SuspensionReason = (thisReader["SuspensionReason"] == DBNull.Value) ? null : thisReader["SuspensionReason"].ToString();
                entity.ChangeReason = (thisReader["ChangeReason"] == DBNull.Value) ? null : thisReader["ChangeReason"].ToString();
                entity.InvalidReason = (thisReader["InvalidReason"] == DBNull.Value) ? null : thisReader["InvalidReason"].ToString();
                entity.IsLast = (System.Int32)thisReader["IsLast"];
            }
            else
            {
                throw new Exception("Data not found");
            }
            thisReader.Close();
            return (entity);
        }

        public IList<LicenseAllView> ReadLicenseAllViewList()
        {
            SqlConnection thisConn = null;
            List<LicenseAllView> allEntities = new List<LicenseAllView>();

            thisConn = getSqlConnection();
            thisConn.Open();
            SqlCommand selectCommand = new SqlCommand();
            selectCommand.Connection = thisConn;
            selectCommand.CommandText = "SELECT [Id] , [Title] , [RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason] , [IsLast] FROM [dbo].[LicenseAll]";
            SqlDataReader thisReader = selectCommand.ExecuteReader(CommandBehavior.CloseConnection);
            while (thisReader.Read())
            {
                LicenseAllView entity = new LicenseAllView();

                entity.Id = (System.Int32)thisReader["Id"];
                entity.Title = (thisReader["Title"] == DBNull.Value) ? null : thisReader["Title"].ToString();
                entity.RegNumber = (thisReader["RegNumber"] == DBNull.Value) ? null : thisReader["RegNumber"].ToString();
                entity.BlankSeries = (thisReader["BlankSeries"] == DBNull.Value) ? null : thisReader["BlankSeries"].ToString();
                entity.BlankNo = (thisReader["BlankNo"] == DBNull.Value) ? null : thisReader["BlankNo"].ToString();
                entity.OrgName = (thisReader["OrgName"] == DBNull.Value) ? null : thisReader["OrgName"].ToString();
                entity.Ogrn = (thisReader["Ogrn"] == DBNull.Value) ? null : thisReader["Ogrn"].ToString();
                entity.Inn = (thisReader["Inn"] == DBNull.Value) ? null : thisReader["Inn"].ToString();
                entity.Parent = thisReader["Parent"] as System.Nullable<System.Int32>;
                entity.Status = thisReader["Status"] as System.Nullable<System.Int32>;
                entity.Document = (thisReader["Document"] == DBNull.Value) ? null : thisReader["Document"].ToString();
                entity.Signature = (thisReader["Signature"] == DBNull.Value) ? null : thisReader["Signature"].ToString();
                entity.TaxiId = thisReader["TaxiId"] as System.Nullable<System.Int32>;
                entity.Lfb = (thisReader["Lfb"] == DBNull.Value) ? null : thisReader["Lfb"].ToString();
                entity.JuridicalAddress = (thisReader["JuridicalAddress"] == DBNull.Value) ? null : thisReader["JuridicalAddress"].ToString();
                entity.PhoneNumber = (thisReader["PhoneNumber"] == DBNull.Value) ? null : thisReader["PhoneNumber"].ToString();
                entity.AddContactData = (thisReader["AddContactData"] == DBNull.Value) ? null : thisReader["AddContactData"].ToString();
                entity.AccountAbbr = (thisReader["AccountAbbr"] == DBNull.Value) ? null : thisReader["AccountAbbr"].ToString();
                entity.TaxiBrand = (thisReader["TaxiBrand"] == DBNull.Value) ? null : thisReader["TaxiBrand"].ToString();
                entity.TaxiModel = (thisReader["TaxiModel"] == DBNull.Value) ? null : thisReader["TaxiModel"].ToString();
                entity.TaxiStateNumber = (thisReader["TaxiStateNumber"] == DBNull.Value) ? null : thisReader["TaxiStateNumber"].ToString();
                entity.TaxiYear = thisReader["TaxiYear"] as System.Nullable<System.Int32>;
                entity.OutputDate = thisReader["OutputDate"] as System.Nullable<System.DateTime>;
                entity.CreationDate = thisReader["CreationDate"] as System.Nullable<System.DateTime>;
                entity.TillDate = thisReader["TillDate"] as System.Nullable<System.DateTime>;
                entity.TillSuspensionDate = thisReader["TillSuspensionDate"] as System.Nullable<System.DateTime>;
                entity.CancellationReason = (thisReader["CancellationReason"] == DBNull.Value) ? null : thisReader["CancellationReason"].ToString();
                entity.SuspensionReason = (thisReader["SuspensionReason"] == DBNull.Value) ? null : thisReader["SuspensionReason"].ToString();
                entity.ChangeReason = (thisReader["ChangeReason"] == DBNull.Value) ? null : thisReader["ChangeReason"].ToString();
                entity.InvalidReason = (thisReader["InvalidReason"] == DBNull.Value) ? null : thisReader["InvalidReason"].ToString();
                entity.IsLast = (System.Int32)thisReader["IsLast"];

                allEntities.Add(entity);
            }
            thisReader.Close();
            return allEntities;
        }
    }
    /// <summary>
    /// All the methods for retrieving, updating and deleting data are implemented in this class file.
    /// The samples below show the finder and specific finder method for Entity1.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("SPSF", "4.1")]
    public class LicenseCancelledViewEntityService : TaxiV2Service
    {
        public LicenseCancelledView ReadLicenseCancelledViewItem(System.Int32 Id)
        {
            SqlConnection thisConn = null;
            LicenseCancelledView entity = null;

            entity = new LicenseCancelledView();
            thisConn = getSqlConnection();
            thisConn.Open();
            SqlCommand selectCommand = new SqlCommand();
            selectCommand.CommandText = "SELECT [Id] , [Title] , [RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason] FROM [dbo].[LicenseCancelled] WHERE [Id] = @Id";
            selectCommand.Parameters.AddWithValue("@Id", Id);

            selectCommand.Connection = thisConn;
            SqlDataReader thisReader = selectCommand.ExecuteReader(CommandBehavior.CloseConnection);
            if (thisReader.Read())
            {
                entity.Id = (System.Int32)thisReader["Id"];
                entity.Title = (thisReader["Title"] == DBNull.Value) ? null : thisReader["Title"].ToString();
                entity.RegNumber = (thisReader["RegNumber"] == DBNull.Value) ? null : thisReader["RegNumber"].ToString();
                entity.BlankSeries = (thisReader["BlankSeries"] == DBNull.Value) ? null : thisReader["BlankSeries"].ToString();
                entity.BlankNo = (thisReader["BlankNo"] == DBNull.Value) ? null : thisReader["BlankNo"].ToString();
                entity.OrgName = (thisReader["OrgName"] == DBNull.Value) ? null : thisReader["OrgName"].ToString();
                entity.Ogrn = (thisReader["Ogrn"] == DBNull.Value) ? null : thisReader["Ogrn"].ToString();
                entity.Inn = (thisReader["Inn"] == DBNull.Value) ? null : thisReader["Inn"].ToString();
                entity.Parent = thisReader["Parent"] as System.Nullable<System.Int32>;
                entity.Status = thisReader["Status"] as System.Nullable<System.Int32>;
                entity.Document = (thisReader["Document"] == DBNull.Value) ? null : thisReader["Document"].ToString();
                entity.Signature = (thisReader["Signature"] == DBNull.Value) ? null : thisReader["Signature"].ToString();
                entity.TaxiId = thisReader["TaxiId"] as System.Nullable<System.Int32>;
                entity.Lfb = (thisReader["Lfb"] == DBNull.Value) ? null : thisReader["Lfb"].ToString();
                entity.JuridicalAddress = (thisReader["JuridicalAddress"] == DBNull.Value) ? null : thisReader["JuridicalAddress"].ToString();
                entity.PhoneNumber = (thisReader["PhoneNumber"] == DBNull.Value) ? null : thisReader["PhoneNumber"].ToString();
                entity.AddContactData = (thisReader["AddContactData"] == DBNull.Value) ? null : thisReader["AddContactData"].ToString();
                entity.AccountAbbr = (thisReader["AccountAbbr"] == DBNull.Value) ? null : thisReader["AccountAbbr"].ToString();
                entity.TaxiBrand = (thisReader["TaxiBrand"] == DBNull.Value) ? null : thisReader["TaxiBrand"].ToString();
                entity.TaxiModel = (thisReader["TaxiModel"] == DBNull.Value) ? null : thisReader["TaxiModel"].ToString();
                entity.TaxiStateNumber = (thisReader["TaxiStateNumber"] == DBNull.Value) ? null : thisReader["TaxiStateNumber"].ToString();
                entity.TaxiYear = thisReader["TaxiYear"] as System.Nullable<System.Int32>;
                entity.OutputDate = thisReader["OutputDate"] as System.Nullable<System.DateTime>;
                entity.CreationDate = thisReader["CreationDate"] as System.Nullable<System.DateTime>;
                entity.TillDate = thisReader["TillDate"] as System.Nullable<System.DateTime>;
                entity.TillSuspensionDate = thisReader["TillSuspensionDate"] as System.Nullable<System.DateTime>;
                entity.CancellationReason = (thisReader["CancellationReason"] == DBNull.Value) ? null : thisReader["CancellationReason"].ToString();
                entity.SuspensionReason = (thisReader["SuspensionReason"] == DBNull.Value) ? null : thisReader["SuspensionReason"].ToString();
                entity.ChangeReason = (thisReader["ChangeReason"] == DBNull.Value) ? null : thisReader["ChangeReason"].ToString();
                entity.InvalidReason = (thisReader["InvalidReason"] == DBNull.Value) ? null : thisReader["InvalidReason"].ToString();
            }
            else
            {
                throw new Exception("Data not found");
            }
            thisReader.Close();
            return (entity);
        }

        public IList<LicenseCancelledView> ReadLicenseCancelledViewList()
        {
            SqlConnection thisConn = null;
            List<LicenseCancelledView> allEntities = new List<LicenseCancelledView>();

            thisConn = getSqlConnection();
            thisConn.Open();
            SqlCommand selectCommand = new SqlCommand();
            selectCommand.Connection = thisConn;
            selectCommand.CommandText = "SELECT [Id] , [Title] , [RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason] FROM [dbo].[LicenseCancelled]";
            SqlDataReader thisReader = selectCommand.ExecuteReader(CommandBehavior.CloseConnection);
            while (thisReader.Read())
            {
                LicenseCancelledView entity = new LicenseCancelledView();

                entity.Id = (System.Int32)thisReader["Id"];
                entity.Title = (thisReader["Title"] == DBNull.Value) ? null : thisReader["Title"].ToString();
                entity.RegNumber = (thisReader["RegNumber"] == DBNull.Value) ? null : thisReader["RegNumber"].ToString();
                entity.BlankSeries = (thisReader["BlankSeries"] == DBNull.Value) ? null : thisReader["BlankSeries"].ToString();
                entity.BlankNo = (thisReader["BlankNo"] == DBNull.Value) ? null : thisReader["BlankNo"].ToString();
                entity.OrgName = (thisReader["OrgName"] == DBNull.Value) ? null : thisReader["OrgName"].ToString();
                entity.Ogrn = (thisReader["Ogrn"] == DBNull.Value) ? null : thisReader["Ogrn"].ToString();
                entity.Inn = (thisReader["Inn"] == DBNull.Value) ? null : thisReader["Inn"].ToString();
                entity.Parent = thisReader["Parent"] as System.Nullable<System.Int32>;
                entity.Status = thisReader["Status"] as System.Nullable<System.Int32>;
                entity.Document = (thisReader["Document"] == DBNull.Value) ? null : thisReader["Document"].ToString();
                entity.Signature = (thisReader["Signature"] == DBNull.Value) ? null : thisReader["Signature"].ToString();
                entity.TaxiId = thisReader["TaxiId"] as System.Nullable<System.Int32>;
                entity.Lfb = (thisReader["Lfb"] == DBNull.Value) ? null : thisReader["Lfb"].ToString();
                entity.JuridicalAddress = (thisReader["JuridicalAddress"] == DBNull.Value) ? null : thisReader["JuridicalAddress"].ToString();
                entity.PhoneNumber = (thisReader["PhoneNumber"] == DBNull.Value) ? null : thisReader["PhoneNumber"].ToString();
                entity.AddContactData = (thisReader["AddContactData"] == DBNull.Value) ? null : thisReader["AddContactData"].ToString();
                entity.AccountAbbr = (thisReader["AccountAbbr"] == DBNull.Value) ? null : thisReader["AccountAbbr"].ToString();
                entity.TaxiBrand = (thisReader["TaxiBrand"] == DBNull.Value) ? null : thisReader["TaxiBrand"].ToString();
                entity.TaxiModel = (thisReader["TaxiModel"] == DBNull.Value) ? null : thisReader["TaxiModel"].ToString();
                entity.TaxiStateNumber = (thisReader["TaxiStateNumber"] == DBNull.Value) ? null : thisReader["TaxiStateNumber"].ToString();
                entity.TaxiYear = thisReader["TaxiYear"] as System.Nullable<System.Int32>;
                entity.OutputDate = thisReader["OutputDate"] as System.Nullable<System.DateTime>;
                entity.CreationDate = thisReader["CreationDate"] as System.Nullable<System.DateTime>;
                entity.TillDate = thisReader["TillDate"] as System.Nullable<System.DateTime>;
                entity.TillSuspensionDate = thisReader["TillSuspensionDate"] as System.Nullable<System.DateTime>;
                entity.CancellationReason = (thisReader["CancellationReason"] == DBNull.Value) ? null : thisReader["CancellationReason"].ToString();
                entity.SuspensionReason = (thisReader["SuspensionReason"] == DBNull.Value) ? null : thisReader["SuspensionReason"].ToString();
                entity.ChangeReason = (thisReader["ChangeReason"] == DBNull.Value) ? null : thisReader["ChangeReason"].ToString();
                entity.InvalidReason = (thisReader["InvalidReason"] == DBNull.Value) ? null : thisReader["InvalidReason"].ToString();

                allEntities.Add(entity);
            }
            thisReader.Close();
            return allEntities;
        }
    }
    /// <summary>
    /// All the methods for retrieving, updating and deleting data are implemented in this class file.
    /// The samples below show the finder and specific finder method for Entity1.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("SPSF", "4.1")]
    public class LicenseEverChangedViewEntityService : TaxiV2Service
    {
        public LicenseEverChangedView ReadLicenseEverChangedViewItem(System.Int32 Id)
        {
            SqlConnection thisConn = null;
            LicenseEverChangedView entity = null;

            entity = new LicenseEverChangedView();
            thisConn = getSqlConnection();
            thisConn.Open();
            SqlCommand selectCommand = new SqlCommand();
            selectCommand.CommandText = "SELECT [Id] , [Title] , [RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason] , [IsLast] FROM [dbo].[LicenseEverChanged] WHERE [Id] = @Id";
            selectCommand.Parameters.AddWithValue("@Id", Id);

            selectCommand.Connection = thisConn;
            SqlDataReader thisReader = selectCommand.ExecuteReader(CommandBehavior.CloseConnection);
            if (thisReader.Read())
            {
                entity.Id = (System.Int32)thisReader["Id"];
                entity.Title = (thisReader["Title"] == DBNull.Value) ? null : thisReader["Title"].ToString();
                entity.RegNumber = (thisReader["RegNumber"] == DBNull.Value) ? null : thisReader["RegNumber"].ToString();
                entity.BlankSeries = (thisReader["BlankSeries"] == DBNull.Value) ? null : thisReader["BlankSeries"].ToString();
                entity.BlankNo = (thisReader["BlankNo"] == DBNull.Value) ? null : thisReader["BlankNo"].ToString();
                entity.OrgName = (thisReader["OrgName"] == DBNull.Value) ? null : thisReader["OrgName"].ToString();
                entity.Ogrn = (thisReader["Ogrn"] == DBNull.Value) ? null : thisReader["Ogrn"].ToString();
                entity.Inn = (thisReader["Inn"] == DBNull.Value) ? null : thisReader["Inn"].ToString();
                entity.Parent = thisReader["Parent"] as System.Nullable<System.Int32>;
                entity.Status = thisReader["Status"] as System.Nullable<System.Int32>;
                entity.Document = (thisReader["Document"] == DBNull.Value) ? null : thisReader["Document"].ToString();
                entity.Signature = (thisReader["Signature"] == DBNull.Value) ? null : thisReader["Signature"].ToString();
                entity.TaxiId = thisReader["TaxiId"] as System.Nullable<System.Int32>;
                entity.Lfb = (thisReader["Lfb"] == DBNull.Value) ? null : thisReader["Lfb"].ToString();
                entity.JuridicalAddress = (thisReader["JuridicalAddress"] == DBNull.Value) ? null : thisReader["JuridicalAddress"].ToString();
                entity.PhoneNumber = (thisReader["PhoneNumber"] == DBNull.Value) ? null : thisReader["PhoneNumber"].ToString();
                entity.AddContactData = (thisReader["AddContactData"] == DBNull.Value) ? null : thisReader["AddContactData"].ToString();
                entity.AccountAbbr = (thisReader["AccountAbbr"] == DBNull.Value) ? null : thisReader["AccountAbbr"].ToString();
                entity.TaxiBrand = (thisReader["TaxiBrand"] == DBNull.Value) ? null : thisReader["TaxiBrand"].ToString();
                entity.TaxiModel = (thisReader["TaxiModel"] == DBNull.Value) ? null : thisReader["TaxiModel"].ToString();
                entity.TaxiStateNumber = (thisReader["TaxiStateNumber"] == DBNull.Value) ? null : thisReader["TaxiStateNumber"].ToString();
                entity.TaxiYear = thisReader["TaxiYear"] as System.Nullable<System.Int32>;
                entity.OutputDate = thisReader["OutputDate"] as System.Nullable<System.DateTime>;
                entity.CreationDate = thisReader["CreationDate"] as System.Nullable<System.DateTime>;
                entity.TillDate = thisReader["TillDate"] as System.Nullable<System.DateTime>;
                entity.TillSuspensionDate = thisReader["TillSuspensionDate"] as System.Nullable<System.DateTime>;
                entity.CancellationReason = (thisReader["CancellationReason"] == DBNull.Value) ? null : thisReader["CancellationReason"].ToString();
                entity.SuspensionReason = (thisReader["SuspensionReason"] == DBNull.Value) ? null : thisReader["SuspensionReason"].ToString();
                entity.ChangeReason = (thisReader["ChangeReason"] == DBNull.Value) ? null : thisReader["ChangeReason"].ToString();
                entity.InvalidReason = (thisReader["InvalidReason"] == DBNull.Value) ? null : thisReader["InvalidReason"].ToString();
                entity.IsLast = (System.Int32)thisReader["IsLast"];
            }
            else
            {
                throw new Exception("Data not found");
            }
            thisReader.Close();
            return (entity);
        }

        public IList<LicenseEverChangedView> ReadLicenseEverChangedViewList()
        {
            SqlConnection thisConn = null;
            List<LicenseEverChangedView> allEntities = new List<LicenseEverChangedView>();

            thisConn = getSqlConnection();
            thisConn.Open();
            SqlCommand selectCommand = new SqlCommand();
            selectCommand.Connection = thisConn;
            selectCommand.CommandText = "SELECT [Id] , [Title] , [RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason] , [IsLast] FROM [dbo].[LicenseEverChanged]";
            SqlDataReader thisReader = selectCommand.ExecuteReader(CommandBehavior.CloseConnection);
            while (thisReader.Read())
            {
                LicenseEverChangedView entity = new LicenseEverChangedView();

                entity.Id = (System.Int32)thisReader["Id"];
                entity.Title = (thisReader["Title"] == DBNull.Value) ? null : thisReader["Title"].ToString();
                entity.RegNumber = (thisReader["RegNumber"] == DBNull.Value) ? null : thisReader["RegNumber"].ToString();
                entity.BlankSeries = (thisReader["BlankSeries"] == DBNull.Value) ? null : thisReader["BlankSeries"].ToString();
                entity.BlankNo = (thisReader["BlankNo"] == DBNull.Value) ? null : thisReader["BlankNo"].ToString();
                entity.OrgName = (thisReader["OrgName"] == DBNull.Value) ? null : thisReader["OrgName"].ToString();
                entity.Ogrn = (thisReader["Ogrn"] == DBNull.Value) ? null : thisReader["Ogrn"].ToString();
                entity.Inn = (thisReader["Inn"] == DBNull.Value) ? null : thisReader["Inn"].ToString();
                entity.Parent = thisReader["Parent"] as System.Nullable<System.Int32>;
                entity.Status = thisReader["Status"] as System.Nullable<System.Int32>;
                entity.Document = (thisReader["Document"] == DBNull.Value) ? null : thisReader["Document"].ToString();
                entity.Signature = (thisReader["Signature"] == DBNull.Value) ? null : thisReader["Signature"].ToString();
                entity.TaxiId = thisReader["TaxiId"] as System.Nullable<System.Int32>;
                entity.Lfb = (thisReader["Lfb"] == DBNull.Value) ? null : thisReader["Lfb"].ToString();
                entity.JuridicalAddress = (thisReader["JuridicalAddress"] == DBNull.Value) ? null : thisReader["JuridicalAddress"].ToString();
                entity.PhoneNumber = (thisReader["PhoneNumber"] == DBNull.Value) ? null : thisReader["PhoneNumber"].ToString();
                entity.AddContactData = (thisReader["AddContactData"] == DBNull.Value) ? null : thisReader["AddContactData"].ToString();
                entity.AccountAbbr = (thisReader["AccountAbbr"] == DBNull.Value) ? null : thisReader["AccountAbbr"].ToString();
                entity.TaxiBrand = (thisReader["TaxiBrand"] == DBNull.Value) ? null : thisReader["TaxiBrand"].ToString();
                entity.TaxiModel = (thisReader["TaxiModel"] == DBNull.Value) ? null : thisReader["TaxiModel"].ToString();
                entity.TaxiStateNumber = (thisReader["TaxiStateNumber"] == DBNull.Value) ? null : thisReader["TaxiStateNumber"].ToString();
                entity.TaxiYear = thisReader["TaxiYear"] as System.Nullable<System.Int32>;
                entity.OutputDate = thisReader["OutputDate"] as System.Nullable<System.DateTime>;
                entity.CreationDate = thisReader["CreationDate"] as System.Nullable<System.DateTime>;
                entity.TillDate = thisReader["TillDate"] as System.Nullable<System.DateTime>;
                entity.TillSuspensionDate = thisReader["TillSuspensionDate"] as System.Nullable<System.DateTime>;
                entity.CancellationReason = (thisReader["CancellationReason"] == DBNull.Value) ? null : thisReader["CancellationReason"].ToString();
                entity.SuspensionReason = (thisReader["SuspensionReason"] == DBNull.Value) ? null : thisReader["SuspensionReason"].ToString();
                entity.ChangeReason = (thisReader["ChangeReason"] == DBNull.Value) ? null : thisReader["ChangeReason"].ToString();
                entity.InvalidReason = (thisReader["InvalidReason"] == DBNull.Value) ? null : thisReader["InvalidReason"].ToString();
                entity.IsLast = (System.Int32)thisReader["IsLast"];

                allEntities.Add(entity);
            }
            thisReader.Close();
            return allEntities;
        }
    }
    /// <summary>
    /// All the methods for retrieving, updating and deleting data are implemented in this class file.
    /// The samples below show the finder and specific finder method for Entity1.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("SPSF", "4.1")]
    public class LicenseEverPausedViewEntityService : TaxiV2Service
    {
        public LicenseEverPausedView ReadLicenseEverPausedViewItem(System.Int32 Id)
        {
            SqlConnection thisConn = null;
            LicenseEverPausedView entity = null;

            entity = new LicenseEverPausedView();
            thisConn = getSqlConnection();
            thisConn.Open();
            SqlCommand selectCommand = new SqlCommand();
            selectCommand.CommandText = "SELECT [Id] , [Title] , [RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason] , [IsLast] FROM [dbo].[LicenseEverPaused] WHERE [Id] = @Id";
            selectCommand.Parameters.AddWithValue("@Id", Id);

            selectCommand.Connection = thisConn;
            SqlDataReader thisReader = selectCommand.ExecuteReader(CommandBehavior.CloseConnection);
            if (thisReader.Read())
            {
                entity.Id = (System.Int32)thisReader["Id"];
                entity.Title = (thisReader["Title"] == DBNull.Value) ? null : thisReader["Title"].ToString();
                entity.RegNumber = (thisReader["RegNumber"] == DBNull.Value) ? null : thisReader["RegNumber"].ToString();
                entity.BlankSeries = (thisReader["BlankSeries"] == DBNull.Value) ? null : thisReader["BlankSeries"].ToString();
                entity.BlankNo = (thisReader["BlankNo"] == DBNull.Value) ? null : thisReader["BlankNo"].ToString();
                entity.OrgName = (thisReader["OrgName"] == DBNull.Value) ? null : thisReader["OrgName"].ToString();
                entity.Ogrn = (thisReader["Ogrn"] == DBNull.Value) ? null : thisReader["Ogrn"].ToString();
                entity.Inn = (thisReader["Inn"] == DBNull.Value) ? null : thisReader["Inn"].ToString();
                entity.Parent = thisReader["Parent"] as System.Nullable<System.Int32>;
                entity.Status = thisReader["Status"] as System.Nullable<System.Int32>;
                entity.Document = (thisReader["Document"] == DBNull.Value) ? null : thisReader["Document"].ToString();
                entity.Signature = (thisReader["Signature"] == DBNull.Value) ? null : thisReader["Signature"].ToString();
                entity.TaxiId = thisReader["TaxiId"] as System.Nullable<System.Int32>;
                entity.Lfb = (thisReader["Lfb"] == DBNull.Value) ? null : thisReader["Lfb"].ToString();
                entity.JuridicalAddress = (thisReader["JuridicalAddress"] == DBNull.Value) ? null : thisReader["JuridicalAddress"].ToString();
                entity.PhoneNumber = (thisReader["PhoneNumber"] == DBNull.Value) ? null : thisReader["PhoneNumber"].ToString();
                entity.AddContactData = (thisReader["AddContactData"] == DBNull.Value) ? null : thisReader["AddContactData"].ToString();
                entity.AccountAbbr = (thisReader["AccountAbbr"] == DBNull.Value) ? null : thisReader["AccountAbbr"].ToString();
                entity.TaxiBrand = (thisReader["TaxiBrand"] == DBNull.Value) ? null : thisReader["TaxiBrand"].ToString();
                entity.TaxiModel = (thisReader["TaxiModel"] == DBNull.Value) ? null : thisReader["TaxiModel"].ToString();
                entity.TaxiStateNumber = (thisReader["TaxiStateNumber"] == DBNull.Value) ? null : thisReader["TaxiStateNumber"].ToString();
                entity.TaxiYear = thisReader["TaxiYear"] as System.Nullable<System.Int32>;
                entity.OutputDate = thisReader["OutputDate"] as System.Nullable<System.DateTime>;
                entity.CreationDate = thisReader["CreationDate"] as System.Nullable<System.DateTime>;
                entity.TillDate = thisReader["TillDate"] as System.Nullable<System.DateTime>;
                entity.TillSuspensionDate = thisReader["TillSuspensionDate"] as System.Nullable<System.DateTime>;
                entity.CancellationReason = (thisReader["CancellationReason"] == DBNull.Value) ? null : thisReader["CancellationReason"].ToString();
                entity.SuspensionReason = (thisReader["SuspensionReason"] == DBNull.Value) ? null : thisReader["SuspensionReason"].ToString();
                entity.ChangeReason = (thisReader["ChangeReason"] == DBNull.Value) ? null : thisReader["ChangeReason"].ToString();
                entity.InvalidReason = (thisReader["InvalidReason"] == DBNull.Value) ? null : thisReader["InvalidReason"].ToString();
                entity.IsLast = (System.Int32)thisReader["IsLast"];
            }
            else
            {
                throw new Exception("Data not found");
            }
            thisReader.Close();
            return (entity);
        }

        public IList<LicenseEverPausedView> ReadLicenseEverPausedViewList()
        {
            SqlConnection thisConn = null;
            List<LicenseEverPausedView> allEntities = new List<LicenseEverPausedView>();

            thisConn = getSqlConnection();
            thisConn.Open();
            SqlCommand selectCommand = new SqlCommand();
            selectCommand.Connection = thisConn;
            selectCommand.CommandText = "SELECT [Id] , [Title] , [RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason] , [IsLast] FROM [dbo].[LicenseEverPaused]";
            SqlDataReader thisReader = selectCommand.ExecuteReader(CommandBehavior.CloseConnection);
            while (thisReader.Read())
            {
                LicenseEverPausedView entity = new LicenseEverPausedView();

                entity.Id = (System.Int32)thisReader["Id"];
                entity.Title = (thisReader["Title"] == DBNull.Value) ? null : thisReader["Title"].ToString();
                entity.RegNumber = (thisReader["RegNumber"] == DBNull.Value) ? null : thisReader["RegNumber"].ToString();
                entity.BlankSeries = (thisReader["BlankSeries"] == DBNull.Value) ? null : thisReader["BlankSeries"].ToString();
                entity.BlankNo = (thisReader["BlankNo"] == DBNull.Value) ? null : thisReader["BlankNo"].ToString();
                entity.OrgName = (thisReader["OrgName"] == DBNull.Value) ? null : thisReader["OrgName"].ToString();
                entity.Ogrn = (thisReader["Ogrn"] == DBNull.Value) ? null : thisReader["Ogrn"].ToString();
                entity.Inn = (thisReader["Inn"] == DBNull.Value) ? null : thisReader["Inn"].ToString();
                entity.Parent = thisReader["Parent"] as System.Nullable<System.Int32>;
                entity.Status = thisReader["Status"] as System.Nullable<System.Int32>;
                entity.Document = (thisReader["Document"] == DBNull.Value) ? null : thisReader["Document"].ToString();
                entity.Signature = (thisReader["Signature"] == DBNull.Value) ? null : thisReader["Signature"].ToString();
                entity.TaxiId = thisReader["TaxiId"] as System.Nullable<System.Int32>;
                entity.Lfb = (thisReader["Lfb"] == DBNull.Value) ? null : thisReader["Lfb"].ToString();
                entity.JuridicalAddress = (thisReader["JuridicalAddress"] == DBNull.Value) ? null : thisReader["JuridicalAddress"].ToString();
                entity.PhoneNumber = (thisReader["PhoneNumber"] == DBNull.Value) ? null : thisReader["PhoneNumber"].ToString();
                entity.AddContactData = (thisReader["AddContactData"] == DBNull.Value) ? null : thisReader["AddContactData"].ToString();
                entity.AccountAbbr = (thisReader["AccountAbbr"] == DBNull.Value) ? null : thisReader["AccountAbbr"].ToString();
                entity.TaxiBrand = (thisReader["TaxiBrand"] == DBNull.Value) ? null : thisReader["TaxiBrand"].ToString();
                entity.TaxiModel = (thisReader["TaxiModel"] == DBNull.Value) ? null : thisReader["TaxiModel"].ToString();
                entity.TaxiStateNumber = (thisReader["TaxiStateNumber"] == DBNull.Value) ? null : thisReader["TaxiStateNumber"].ToString();
                entity.TaxiYear = thisReader["TaxiYear"] as System.Nullable<System.Int32>;
                entity.OutputDate = thisReader["OutputDate"] as System.Nullable<System.DateTime>;
                entity.CreationDate = thisReader["CreationDate"] as System.Nullable<System.DateTime>;
                entity.TillDate = thisReader["TillDate"] as System.Nullable<System.DateTime>;
                entity.TillSuspensionDate = thisReader["TillSuspensionDate"] as System.Nullable<System.DateTime>;
                entity.CancellationReason = (thisReader["CancellationReason"] == DBNull.Value) ? null : thisReader["CancellationReason"].ToString();
                entity.SuspensionReason = (thisReader["SuspensionReason"] == DBNull.Value) ? null : thisReader["SuspensionReason"].ToString();
                entity.ChangeReason = (thisReader["ChangeReason"] == DBNull.Value) ? null : thisReader["ChangeReason"].ToString();
                entity.InvalidReason = (thisReader["InvalidReason"] == DBNull.Value) ? null : thisReader["InvalidReason"].ToString();
                entity.IsLast = (System.Int32)thisReader["IsLast"];

                allEntities.Add(entity);
            }
            thisReader.Close();
            return allEntities;
        }
    }
    /// <summary>
    /// All the methods for retrieving, updating and deleting data are implemented in this class file.
    /// The samples below show the finder and specific finder method for Entity1.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("SPSF", "4.1")]
    public class LicensePausedViewEntityService : TaxiV2Service
    {
        public LicensePausedView ReadLicensePausedViewItem(System.Int32 Id)
        {
            SqlConnection thisConn = null;
            LicensePausedView entity = null;

            entity = new LicensePausedView();
            thisConn = getSqlConnection();
            thisConn.Open();
            SqlCommand selectCommand = new SqlCommand();
            selectCommand.CommandText = "SELECT [Id] , [Title] , [RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason] FROM [dbo].[LicensePaused] WHERE [Id] = @Id";
            selectCommand.Parameters.AddWithValue("@Id", Id);

            selectCommand.Connection = thisConn;
            SqlDataReader thisReader = selectCommand.ExecuteReader(CommandBehavior.CloseConnection);
            if (thisReader.Read())
            {
                entity.Id = (System.Int32)thisReader["Id"];
                entity.Title = (thisReader["Title"] == DBNull.Value) ? null : thisReader["Title"].ToString();
                entity.RegNumber = (thisReader["RegNumber"] == DBNull.Value) ? null : thisReader["RegNumber"].ToString();
                entity.BlankSeries = (thisReader["BlankSeries"] == DBNull.Value) ? null : thisReader["BlankSeries"].ToString();
                entity.BlankNo = (thisReader["BlankNo"] == DBNull.Value) ? null : thisReader["BlankNo"].ToString();
                entity.OrgName = (thisReader["OrgName"] == DBNull.Value) ? null : thisReader["OrgName"].ToString();
                entity.Ogrn = (thisReader["Ogrn"] == DBNull.Value) ? null : thisReader["Ogrn"].ToString();
                entity.Inn = (thisReader["Inn"] == DBNull.Value) ? null : thisReader["Inn"].ToString();
                entity.Parent = thisReader["Parent"] as System.Nullable<System.Int32>;
                entity.Status = thisReader["Status"] as System.Nullable<System.Int32>;
                entity.Document = (thisReader["Document"] == DBNull.Value) ? null : thisReader["Document"].ToString();
                entity.Signature = (thisReader["Signature"] == DBNull.Value) ? null : thisReader["Signature"].ToString();
                entity.TaxiId = thisReader["TaxiId"] as System.Nullable<System.Int32>;
                entity.Lfb = (thisReader["Lfb"] == DBNull.Value) ? null : thisReader["Lfb"].ToString();
                entity.JuridicalAddress = (thisReader["JuridicalAddress"] == DBNull.Value) ? null : thisReader["JuridicalAddress"].ToString();
                entity.PhoneNumber = (thisReader["PhoneNumber"] == DBNull.Value) ? null : thisReader["PhoneNumber"].ToString();
                entity.AddContactData = (thisReader["AddContactData"] == DBNull.Value) ? null : thisReader["AddContactData"].ToString();
                entity.AccountAbbr = (thisReader["AccountAbbr"] == DBNull.Value) ? null : thisReader["AccountAbbr"].ToString();
                entity.TaxiBrand = (thisReader["TaxiBrand"] == DBNull.Value) ? null : thisReader["TaxiBrand"].ToString();
                entity.TaxiModel = (thisReader["TaxiModel"] == DBNull.Value) ? null : thisReader["TaxiModel"].ToString();
                entity.TaxiStateNumber = (thisReader["TaxiStateNumber"] == DBNull.Value) ? null : thisReader["TaxiStateNumber"].ToString();
                entity.TaxiYear = thisReader["TaxiYear"] as System.Nullable<System.Int32>;
                entity.OutputDate = thisReader["OutputDate"] as System.Nullable<System.DateTime>;
                entity.CreationDate = thisReader["CreationDate"] as System.Nullable<System.DateTime>;
                entity.TillDate = thisReader["TillDate"] as System.Nullable<System.DateTime>;
                entity.TillSuspensionDate = thisReader["TillSuspensionDate"] as System.Nullable<System.DateTime>;
                entity.CancellationReason = (thisReader["CancellationReason"] == DBNull.Value) ? null : thisReader["CancellationReason"].ToString();
                entity.SuspensionReason = (thisReader["SuspensionReason"] == DBNull.Value) ? null : thisReader["SuspensionReason"].ToString();
                entity.ChangeReason = (thisReader["ChangeReason"] == DBNull.Value) ? null : thisReader["ChangeReason"].ToString();
                entity.InvalidReason = (thisReader["InvalidReason"] == DBNull.Value) ? null : thisReader["InvalidReason"].ToString();
            }
            else
            {
                throw new Exception("Data not found");
            }
            thisReader.Close();
            return (entity);
        }

        public IList<LicensePausedView> ReadLicensePausedViewList()
        {
            SqlConnection thisConn = null;
            List<LicensePausedView> allEntities = new List<LicensePausedView>();

            thisConn = getSqlConnection();
            thisConn.Open();
            SqlCommand selectCommand = new SqlCommand();
            selectCommand.Connection = thisConn;
            selectCommand.CommandText = "SELECT [Id] , [Title] , [RegNumber] , [BlankSeries] , [BlankNo] , [OrgName] , [Ogrn] , [Inn] , [Parent] , [Status] , [Document] , [Signature] , [TaxiId] , [Lfb] , [JuridicalAddress] , [PhoneNumber] , [AddContactData] , [AccountAbbr] , [TaxiBrand] , [TaxiModel] , [TaxiStateNumber] , [TaxiYear] , [OutputDate] , [CreationDate] , [TillDate] , [TillSuspensionDate] , [CancellationReason] , [SuspensionReason] , [ChangeReason] , [InvalidReason] FROM [dbo].[LicensePaused]";
            SqlDataReader thisReader = selectCommand.ExecuteReader(CommandBehavior.CloseConnection);
            while (thisReader.Read())
            {
                LicensePausedView entity = new LicensePausedView();

                entity.Id = (System.Int32)thisReader["Id"];
                entity.Title = (thisReader["Title"] == DBNull.Value) ? null : thisReader["Title"].ToString();
                entity.RegNumber = (thisReader["RegNumber"] == DBNull.Value) ? null : thisReader["RegNumber"].ToString();
                entity.BlankSeries = (thisReader["BlankSeries"] == DBNull.Value) ? null : thisReader["BlankSeries"].ToString();
                entity.BlankNo = (thisReader["BlankNo"] == DBNull.Value) ? null : thisReader["BlankNo"].ToString();
                entity.OrgName = (thisReader["OrgName"] == DBNull.Value) ? null : thisReader["OrgName"].ToString();
                entity.Ogrn = (thisReader["Ogrn"] == DBNull.Value) ? null : thisReader["Ogrn"].ToString();
                entity.Inn = (thisReader["Inn"] == DBNull.Value) ? null : thisReader["Inn"].ToString();
                entity.Parent = thisReader["Parent"] as System.Nullable<System.Int32>;
                entity.Status = thisReader["Status"] as System.Nullable<System.Int32>;
                entity.Document = (thisReader["Document"] == DBNull.Value) ? null : thisReader["Document"].ToString();
                entity.Signature = (thisReader["Signature"] == DBNull.Value) ? null : thisReader["Signature"].ToString();
                entity.TaxiId = thisReader["TaxiId"] as System.Nullable<System.Int32>;
                entity.Lfb = (thisReader["Lfb"] == DBNull.Value) ? null : thisReader["Lfb"].ToString();
                entity.JuridicalAddress = (thisReader["JuridicalAddress"] == DBNull.Value) ? null : thisReader["JuridicalAddress"].ToString();
                entity.PhoneNumber = (thisReader["PhoneNumber"] == DBNull.Value) ? null : thisReader["PhoneNumber"].ToString();
                entity.AddContactData = (thisReader["AddContactData"] == DBNull.Value) ? null : thisReader["AddContactData"].ToString();
                entity.AccountAbbr = (thisReader["AccountAbbr"] == DBNull.Value) ? null : thisReader["AccountAbbr"].ToString();
                entity.TaxiBrand = (thisReader["TaxiBrand"] == DBNull.Value) ? null : thisReader["TaxiBrand"].ToString();
                entity.TaxiModel = (thisReader["TaxiModel"] == DBNull.Value) ? null : thisReader["TaxiModel"].ToString();
                entity.TaxiStateNumber = (thisReader["TaxiStateNumber"] == DBNull.Value) ? null : thisReader["TaxiStateNumber"].ToString();
                entity.TaxiYear = thisReader["TaxiYear"] as System.Nullable<System.Int32>;
                entity.OutputDate = thisReader["OutputDate"] as System.Nullable<System.DateTime>;
                entity.CreationDate = thisReader["CreationDate"] as System.Nullable<System.DateTime>;
                entity.TillDate = thisReader["TillDate"] as System.Nullable<System.DateTime>;
                entity.TillSuspensionDate = thisReader["TillSuspensionDate"] as System.Nullable<System.DateTime>;
                entity.CancellationReason = (thisReader["CancellationReason"] == DBNull.Value) ? null : thisReader["CancellationReason"].ToString();
                entity.SuspensionReason = (thisReader["SuspensionReason"] == DBNull.Value) ? null : thisReader["SuspensionReason"].ToString();
                entity.ChangeReason = (thisReader["ChangeReason"] == DBNull.Value) ? null : thisReader["ChangeReason"].ToString();
                entity.InvalidReason = (thisReader["InvalidReason"] == DBNull.Value) ? null : thisReader["InvalidReason"].ToString();

                allEntities.Add(entity);
            }
            thisReader.Close();
            return allEntities;
        }
    }
}

