<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EGRIPRequest_DlgAccountIsNotEntrepreneurErrorFmt" xml:space="preserve">
    <value>В документе "{0}" юридическое лицо не является индивидуальным предпринимателем</value>
  </data>
  <data name="EGRULRequest_DlgAccountIsEntrepreneurErrorFmt" xml:space="preserve">
    <value>В документе "{0}" юридическое лицо является индивидуальным предпринимателем</value>
  </data>
  <data name="EGRULRequest_DlgCancelButtonText" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="EGRULRequest_DlgErrorListCaption" xml:space="preserve">
    <value>Обратите внимание на следующие ошибки</value>
  </data>
  <data name="EGRULRequest_DlgErrorListHeader1" xml:space="preserve">
    <value>Описание</value>
  </data>
  <data name="EGRULRequest_DlgNoAccountErrorFmt" xml:space="preserve">
    <value>В документе "{0}" не указано юридическое лицо</value>
  </data>
  <data name="EGRULRequest_DlgNoDocumentsError" xml:space="preserve">
    <value>Нет ни одного документа, по которому можно было бы отправить запрос</value>
  </data>
  <data name="EGRULRequest_DlgNoRequestMessageText" xml:space="preserve">
    <value>Среди выбранных нет ни одного документа, который бы имел сведения о юридическом лице</value>
  </data>
  <data name="EGRULRequest_DlgOkButtonText" xml:space="preserve">
    <value>Продолжить</value>
  </data>
  <data name="EGRULRequest_DlgPrecautionMessageText" xml:space="preserve">
    <value>По некоторым документам запрос не будет отправлен, так как в них нет сведений о юридических лицах</value>
  </data>
  <data name="EGRULRequest_DlgProcessNotifyText" xml:space="preserve">
    <value>Выполняется отправка</value>
  </data>
  <data name="EGRULRequest_DlgRequestListCaption" xml:space="preserve">
    <value>Запрос будет отправлен по следующим документам</value>
  </data>
  <data name="EGRULRequest_DlgRequestListHeader1" xml:space="preserve">
    <value>Документ</value>
  </data>
  <data name="EGRULRequest_DlgRequestListHeader2" xml:space="preserve">
    <value>Информация о юридическом лице</value>
  </data>
  <data name="PTSRequest_DlgCancelButtonText" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="PTSRequest_DlgErrorListCaption" xml:space="preserve">
    <value>Обратите внимание на следующие ошибки</value>
  </data>
  <data name="PTSRequest_DlgErrorListHeader1" xml:space="preserve">
    <value>Описание</value>
  </data>
  <data name="PTSRequest_DlgNoDocumentsError" xml:space="preserve">
    <value>Нет ни одного транспортного средства, по которому можно было бы отправить запрос</value>
  </data>
  <data name="PTSRequest_DlgNoRequestMessageText" xml:space="preserve">
    <value>Среди выбранных нет ни одного транспортного средства, который бы имел сведения о государственном регистрационном знаке</value>
  </data>
  <data name="PTSRequest_DlgOkButtonText" xml:space="preserve">
    <value>Продолжить</value>
  </data>
  <data name="PTSRequest_DlgPrecautionMessageText" xml:space="preserve">
    <value>По некоторым транспортным средствам запрос не будет отправлен, так как в них нет сведений о государственном регистрационном знаке</value>
  </data>
  <data name="PTSRequest_DlgProcessNotifyText" xml:space="preserve">
    <value>Выполняется отправка</value>
  </data>
  <data name="PTSRequest_DlgRequestListCaption" xml:space="preserve">
    <value>Запрос будет отправлен по следующим транспортным средствам</value>
  </data>
  <data name="PTSRequest_DlgRequestListHeader1" xml:space="preserve">
    <value>Транспортное средство</value>
  </data>
  <data name="PTSRequest_DlgRequestListHeader2" xml:space="preserve">
    <value>Гос. регистрационный номер</value>
  </data>
  <data name="PTSRequest_DlgNoStateNumberErrorFmt" xml:space="preserve">
    <value>У транспортного средства "{0}" не указан государственный регистрационный номер</value>
  </data>
  <data name="SendStatusRequest_DlgNoDocumentsError" xml:space="preserve">
    <value>Нет ни одного обращения, по которому можно было бы отправить статус</value>
  </data>
  <data name="SendStatusRequest_DlgNoStatusError" xml:space="preserve">
    <value>В обращении {0} не указан статус</value>
  </data>
  <data name="PenaltyRequest_DlgCancelButtonText" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="PenaltyRequest_DlgErrorListCaption" xml:space="preserve">
    <value>Обратите внимание на следующие ошибки</value>
  </data>
  <data name="PenaltyRequest_DlgErrorListHeader1" xml:space="preserve">
    <value>Описание</value>
  </data>
  <data name="PenaltyRequest_DlgNoDocumentsError" xml:space="preserve">
    <value>Нет ни одного разрешения, по которому можно было бы отправить запрос</value>
  </data>
  <data name="PenaltyRequest_DlgNoRequestMessageText" xml:space="preserve">
    <value>Среди выбранных нет ни одного разрешения, которое бы имело сведения о номере ТС</value>
  </data>
  <data name="PenaltyRequest_DlgNoStateNumberErrorFmt" xml:space="preserve">
    <value>У разрешения "{0}" не указан государственный регистрационный номер транспортного средства</value>
  </data>
  <data name="PenaltyRequest_DlgOkButtonText" xml:space="preserve">
    <value>Продолжить</value>
  </data>
  <data name="PenaltyRequest_DlgPrecautionMessageText" xml:space="preserve">
    <value>По некоторым разрешениям запрос не будет отправлен, так как в них нет сведений о номере ТС</value>
  </data>
  <data name="PenaltyRequest_DlgProcessNotifyText" xml:space="preserve">
    <value>Выполняется отправка</value>
  </data>
  <data name="PenaltyRequest_DlgRequestListCaption" xml:space="preserve">
    <value>Запрос будет отправлен по следующим разрешениям</value>
  </data>
  <data name="PenaltyRequest_DlgRequestListHeader1" xml:space="preserve">
    <value>Разрешение</value>
  </data>
  <data name="PenaltyRequest_DlgRequestListHeader2" xml:space="preserve">
    <value>Номер ТС</value>
  </data>
  <data name="CombiRequest_DlgCancelButtonText" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="CombiRequest_DlgErrorListCaption" xml:space="preserve">
    <value>Обратите внимание на следующие ошибки</value>
  </data>
  <data name="CombiRequest_DlgErrorListHeader1" xml:space="preserve">
    <value>Описание</value>
  </data>
  <data name="CombiRequest_DlgNoAccountErrorFmt" xml:space="preserve">
    <value>В документе "{0}" не указан заявитель</value>
  </data>
  <data name="CombiRequest_DlgNoDocumentsError" xml:space="preserve">
    <value>Нет ни одного документа, по которому можно было бы отправить запрос</value>
  </data>
  <data name="CombiRequest_DlgNoRequestMessageText" xml:space="preserve">
    <value>Среди выбранных нет ни одного документа, который бы имел сведения о заявителе</value>
  </data>
  <data name="CombiRequest_DlgOkButtonText" xml:space="preserve">
    <value>Продолжить</value>
  </data>
  <data name="CombiRequest_DlgPrecautionMessageText" xml:space="preserve">
    <value>По некоторым документам запрос не будет отправлен, так как в них нет сведений о заявителе</value>
  </data>
  <data name="CombiRequest_DlgProcessNotifyText" xml:space="preserve">
    <value>Выполняется отправка</value>
  </data>
  <data name="CombiRequest_DlgRequestListCaption" xml:space="preserve">
    <value>Запрос будет отправлен по следующим документам</value>
  </data>
  <data name="CombiRequest_DlgRequestListHeader1" xml:space="preserve">
    <value>Документ</value>
  </data>
  <data name="CombiRequest_DlgRequestListHeader2" xml:space="preserve">
    <value>Информация о заявителе</value>
  </data>
  <data name="DeleteListItems_CommentText" xml:space="preserve">
    <value>Примечание: Список не удаляется. Для удаления элементов списка используется запланированное задание. На этой же странице можно будет отслеживать его статус.</value>
  </data>
  <data name="IncomeRequestFilterPage_BtnFind" xml:space="preserve">
    <value>Найти</value>
  </data>
  <data name="IncomeRequestFilterPage_DateFrom" xml:space="preserve">
    <value>с:</value>
  </data>
  <data name="IncomeRequestFilterPage_DateTo" xml:space="preserve">
    <value>по:</value>
  </data>
  <data name="IncomeRequestFilterPage_InputDateDescrText" xml:space="preserve">
    <value>Укажите диапазон для даты подачи обращения, включительно.</value>
  </data>
  <data name="IncomeRequestFilterPage_InputDateText" xml:space="preserve">
    <value>Дата подачи обращения:</value>
  </data>
  <data name="IncomeRequestFilterPage_PrepareFactDateDescrText" xml:space="preserve">
    <value>Укажите диапазон для даты фактической подготовки, включительно.</value>
  </data>
  <data name="IncomeRequestFilterPage_PrepareFactDateText" xml:space="preserve">
    <value>Дата фактической подготовки:</value>
  </data>
  <data name="LicenseFilterPage_BtnFind" xml:space="preserve">
    <value>Найти</value>
  </data>
  <data name="LicenseFilterPage_DateFrom" xml:space="preserve">
    <value>с:</value>
  </data>
  <data name="LicenseFilterPage_DateTo" xml:space="preserve">
    <value>по:</value>
  </data>
  <data name="LicenseFilterPage_FromDateDescrText" xml:space="preserve">
    <value>Укажите диапазон для срока действия (с) разрешения, включительно.</value>
  </data>
  <data name="LicenseFilterPage_FromDateText" xml:space="preserve">
    <value>Срок действия (с) разрешения:</value>
  </data>
  <data name="LicenseFilterPage_OutputDateDescrText" xml:space="preserve">
    <value>Укажите диапазон для даты выдачи разрешения, включительно.</value>
  </data>
  <data name="LicenseFilterPage_OutputDateText" xml:space="preserve">
    <value>Дата выдачи разрешения:</value>
  </data>
</root>