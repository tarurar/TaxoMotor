//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TM.ServiceClients.MessageQueue {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service", Namespace="http://schemas.datacontract.org/2004/07/Rkis.ServiceMessenger")]
    [System.SerializableAttribute()]
    public partial class Service : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificateClientPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificateClientThumbprintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificateServiceThumbprintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceEndPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ServiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceInstanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServicePasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceProiriryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceProxyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceSendMaxCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceSpecificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceTimeoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceUserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificateClientPassword {
            get {
                return this.CertificateClientPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateClientPasswordField, value) != true)) {
                    this.CertificateClientPasswordField = value;
                    this.RaisePropertyChanged("CertificateClientPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificateClientThumbprint {
            get {
                return this.CertificateClientThumbprintField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateClientThumbprintField, value) != true)) {
                    this.CertificateClientThumbprintField = value;
                    this.RaisePropertyChanged("CertificateClientThumbprint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificateServiceThumbprint {
            get {
                return this.CertificateServiceThumbprintField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateServiceThumbprintField, value) != true)) {
                    this.CertificateServiceThumbprintField = value;
                    this.RaisePropertyChanged("CertificateServiceThumbprint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceEndPoint {
            get {
                return this.ServiceEndPointField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceEndPointField, value) != true)) {
                    this.ServiceEndPointField = value;
                    this.RaisePropertyChanged("ServiceEndPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ServiceId {
            get {
                return this.ServiceIdField;
            }
            set {
                if ((this.ServiceIdField.Equals(value) != true)) {
                    this.ServiceIdField = value;
                    this.RaisePropertyChanged("ServiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceInstance {
            get {
                return this.ServiceInstanceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceInstanceField, value) != true)) {
                    this.ServiceInstanceField = value;
                    this.RaisePropertyChanged("ServiceInstance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServicePassword {
            get {
                return this.ServicePasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.ServicePasswordField, value) != true)) {
                    this.ServicePasswordField = value;
                    this.RaisePropertyChanged("ServicePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceProiriry {
            get {
                return this.ServiceProiriryField;
            }
            set {
                if ((this.ServiceProiriryField.Equals(value) != true)) {
                    this.ServiceProiriryField = value;
                    this.RaisePropertyChanged("ServiceProiriry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceProxy {
            get {
                return this.ServiceProxyField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceProxyField, value) != true)) {
                    this.ServiceProxyField = value;
                    this.RaisePropertyChanged("ServiceProxy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceSendMaxCount {
            get {
                return this.ServiceSendMaxCountField;
            }
            set {
                if ((this.ServiceSendMaxCountField.Equals(value) != true)) {
                    this.ServiceSendMaxCountField = value;
                    this.RaisePropertyChanged("ServiceSendMaxCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceSpecification {
            get {
                return this.ServiceSpecificationField;
            }
            set {
                if ((this.ServiceSpecificationField.Equals(value) != true)) {
                    this.ServiceSpecificationField = value;
                    this.RaisePropertyChanged("ServiceSpecification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceTimeout {
            get {
                return this.ServiceTimeoutField;
            }
            set {
                if ((this.ServiceTimeoutField.Equals(value) != true)) {
                    this.ServiceTimeoutField = value;
                    this.RaisePropertyChanged("ServiceTimeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceUrl {
            get {
                return this.ServiceUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceUrlField, value) != true)) {
                    this.ServiceUrlField = value;
                    this.RaisePropertyChanged("ServiceUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceUserName {
            get {
                return this.ServiceUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceUserNameField, value) != true)) {
                    this.ServiceUserNameField = value;
                    this.RaisePropertyChanged("ServiceUserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/Rkis.ServiceMessenger")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificateInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MessageDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTextAckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetriesCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RetriesErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RetriesLastDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetriesStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TM.ServiceClients.MessageQueue.Service ServiceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificateInfo {
            get {
                return this.CertificateInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateInfoField, value) != true)) {
                    this.CertificateInfoField = value;
                    this.RaisePropertyChanged("CertificateInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DocumentId {
            get {
                return this.DocumentIdField;
            }
            set {
                if ((this.DocumentIdField.Equals(value) != true)) {
                    this.DocumentIdField = value;
                    this.RaisePropertyChanged("DocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MessageDate {
            get {
                return this.MessageDateField;
            }
            set {
                if ((this.MessageDateField.Equals(value) != true)) {
                    this.MessageDateField = value;
                    this.RaisePropertyChanged("MessageDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((this.MessageIdField.Equals(value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageMethod {
            get {
                return this.MessageMethodField;
            }
            set {
                if ((this.MessageMethodField.Equals(value) != true)) {
                    this.MessageMethodField = value;
                    this.RaisePropertyChanged("MessageMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageText {
            get {
                return this.MessageTextField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTextField, value) != true)) {
                    this.MessageTextField = value;
                    this.RaisePropertyChanged("MessageText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageTextAck {
            get {
                return this.MessageTextAckField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTextAckField, value) != true)) {
                    this.MessageTextAckField = value;
                    this.RaisePropertyChanged("MessageTextAck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((this.MessageTypeField.Equals(value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetriesCount {
            get {
                return this.RetriesCountField;
            }
            set {
                if ((this.RetriesCountField.Equals(value) != true)) {
                    this.RetriesCountField = value;
                    this.RaisePropertyChanged("RetriesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RetriesError {
            get {
                return this.RetriesErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.RetriesErrorField, value) != true)) {
                    this.RetriesErrorField = value;
                    this.RaisePropertyChanged("RetriesError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RetriesLastDate {
            get {
                return this.RetriesLastDateField;
            }
            set {
                if ((this.RetriesLastDateField.Equals(value) != true)) {
                    this.RetriesLastDateField = value;
                    this.RaisePropertyChanged("RetriesLastDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetriesStatus {
            get {
                return this.RetriesStatusField;
            }
            set {
                if ((this.RetriesStatusField.Equals(value) != true)) {
                    this.RetriesStatusField = value;
                    this.RaisePropertyChanged("RetriesStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TM.ServiceClients.MessageQueue.Service Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessageQueue.IDataService")]
    public interface IDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetServiceList", ReplyAction="http://tempuri.org/IDataService/GetServiceListResponse")]
        TM.ServiceClients.MessageQueue.Service[] GetServiceList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetServiceList", ReplyAction="http://tempuri.org/IDataService/GetServiceListResponse")]
        System.Threading.Tasks.Task<TM.ServiceClients.MessageQueue.Service[]> GetServiceListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetService", ReplyAction="http://tempuri.org/IDataService/GetServiceResponse")]
        TM.ServiceClients.MessageQueue.Service GetService(System.Guid ServiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetService", ReplyAction="http://tempuri.org/IDataService/GetServiceResponse")]
        System.Threading.Tasks.Task<TM.ServiceClients.MessageQueue.Service> GetServiceAsync(System.Guid ServiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMessageList", ReplyAction="http://tempuri.org/IDataService/GetMessageListResponse")]
        TM.ServiceClients.MessageQueue.Message[] GetMessageList(System.Guid DocumentId, int MessageType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMessageList", ReplyAction="http://tempuri.org/IDataService/GetMessageListResponse")]
        System.Threading.Tasks.Task<TM.ServiceClients.MessageQueue.Message[]> GetMessageListAsync(System.Guid DocumentId, int MessageType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMessage", ReplyAction="http://tempuri.org/IDataService/GetMessageResponse")]
        TM.ServiceClients.MessageQueue.Message GetMessage(System.Guid MessageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMessage", ReplyAction="http://tempuri.org/IDataService/GetMessageResponse")]
        System.Threading.Tasks.Task<TM.ServiceClients.MessageQueue.Message> GetMessageAsync(System.Guid MessageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddMessage", ReplyAction="http://tempuri.org/IDataService/AddMessageResponse")]
        bool AddMessage(TM.ServiceClients.MessageQueue.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddMessage", ReplyAction="http://tempuri.org/IDataService/AddMessageResponse")]
        System.Threading.Tasks.Task<bool> AddMessageAsync(TM.ServiceClients.MessageQueue.Message message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataServiceChannel : TM.ServiceClients.MessageQueue.IDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataServiceClient : System.ServiceModel.ClientBase<TM.ServiceClients.MessageQueue.IDataService>, TM.ServiceClients.MessageQueue.IDataService {
        
        public DataServiceClient() {
        }
        
        public DataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TM.ServiceClients.MessageQueue.Service[] GetServiceList() {
            return base.Channel.GetServiceList();
        }
        
        public System.Threading.Tasks.Task<TM.ServiceClients.MessageQueue.Service[]> GetServiceListAsync() {
            return base.Channel.GetServiceListAsync();
        }
        
        public TM.ServiceClients.MessageQueue.Service GetService(System.Guid ServiceId) {
            return base.Channel.GetService(ServiceId);
        }
        
        public System.Threading.Tasks.Task<TM.ServiceClients.MessageQueue.Service> GetServiceAsync(System.Guid ServiceId) {
            return base.Channel.GetServiceAsync(ServiceId);
        }
        
        public TM.ServiceClients.MessageQueue.Message[] GetMessageList(System.Guid DocumentId, int MessageType) {
            return base.Channel.GetMessageList(DocumentId, MessageType);
        }
        
        public System.Threading.Tasks.Task<TM.ServiceClients.MessageQueue.Message[]> GetMessageListAsync(System.Guid DocumentId, int MessageType) {
            return base.Channel.GetMessageListAsync(DocumentId, MessageType);
        }
        
        public TM.ServiceClients.MessageQueue.Message GetMessage(System.Guid MessageId) {
            return base.Channel.GetMessage(MessageId);
        }
        
        public System.Threading.Tasks.Task<TM.ServiceClients.MessageQueue.Message> GetMessageAsync(System.Guid MessageId) {
            return base.Channel.GetMessageAsync(MessageId);
        }
        
        public bool AddMessage(TM.ServiceClients.MessageQueue.Message message) {
            return base.Channel.AddMessage(message);
        }
        
        public System.Threading.Tasks.Task<bool> AddMessageAsync(TM.ServiceClients.MessageQueue.Message message) {
            return base.Channel.AddMessageAsync(message);
        }
    }
}
